{"ast":null,"code":"/**\n * @license React\n * react.development.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function () {\n    'use strict';\n\n    /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n    if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart === 'function') {\n      __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());\n    }\n    var ReactVersion = '18.3.0-canary-56e20051c-20240311';\n\n    // ATTENTION\n    // When adding new symbols to this file,\n    // Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n    // The Symbol used to tag the ReactElement-like types.\n    var REACT_ELEMENT_TYPE = Symbol.for('react.element');\n    var REACT_PORTAL_TYPE = Symbol.for('react.portal');\n    var REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\n    var REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\n    var REACT_PROFILER_TYPE = Symbol.for('react.profiler');\n    var REACT_PROVIDER_TYPE = Symbol.for('react.provider'); // TODO: Delete with enableRenderableContext\n\n    var REACT_CONSUMER_TYPE = Symbol.for('react.consumer');\n    var REACT_CONTEXT_TYPE = Symbol.for('react.context');\n    var REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\n    var REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\n    var REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\n    var REACT_MEMO_TYPE = Symbol.for('react.memo');\n    var REACT_LAZY_TYPE = Symbol.for('react.lazy');\n    var REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');\n    var REACT_CACHE_TYPE = Symbol.for('react.cache');\n    var MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\n    var FAUX_ITERATOR_SYMBOL = '@@iterator';\n    function getIteratorFn(maybeIterable) {\n      if (maybeIterable === null || typeof maybeIterable !== 'object') {\n        return null;\n      }\n      var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n      if (typeof maybeIterator === 'function') {\n        return maybeIterator;\n      }\n      return null;\n    }\n\n    /**\n     * Keeps track of the current dispatcher.\n     */\n    var ReactCurrentDispatcher$1 = {\n      current: null\n    };\n\n    /**\n     * Keeps track of the current Cache dispatcher.\n     */\n    var ReactCurrentCache = {\n      current: null\n    };\n\n    /**\n     * Keeps track of the current batch's configuration such as how long an update\n     * should suspend for if it needs to.\n     */\n    var ReactCurrentBatchConfig = {\n      transition: null\n    };\n    var ReactCurrentActQueue = {\n      current: null,\n      // Used to reproduce behavior of `batchedUpdates` in legacy mode.\n      isBatchingLegacy: false,\n      didScheduleLegacyUpdate: false,\n      // Tracks whether something called `use` during the current batch of work.\n      // Determines whether we should yield to microtasks to unwrap already resolved\n      // promises without suspending.\n      didUsePromise: false\n    };\n\n    /**\n     * Keeps track of the current owner.\n     *\n     * The current owner is the component who should own any components that are\n     * currently being constructed.\n     */\n    var ReactCurrentOwner$1 = {\n      /**\n       * @internal\n       * @type {ReactComponent}\n       */\n      current: null\n    };\n    var ReactDebugCurrentFrame$1 = {};\n    var currentExtraStackFrame = null;\n    {\n      ReactDebugCurrentFrame$1.setExtraStackFrame = function (stack) {\n        {\n          currentExtraStackFrame = stack;\n        }\n      }; // Stack implementation injected by the current renderer.\n\n      ReactDebugCurrentFrame$1.getCurrentStack = null;\n      ReactDebugCurrentFrame$1.getStackAddendum = function () {\n        var stack = ''; // Add an extra top frame while an element is being validated\n\n        if (currentExtraStackFrame) {\n          stack += currentExtraStackFrame;\n        } // Delegate to the injected renderer-specific implementation\n\n        var impl = ReactDebugCurrentFrame$1.getCurrentStack;\n        if (impl) {\n          stack += impl() || '';\n        }\n        return stack;\n      };\n    }\n    var ReactSharedInternals = {\n      ReactCurrentDispatcher: ReactCurrentDispatcher$1,\n      ReactCurrentCache: ReactCurrentCache,\n      ReactCurrentBatchConfig: ReactCurrentBatchConfig,\n      ReactCurrentOwner: ReactCurrentOwner$1\n    };\n    {\n      ReactSharedInternals.ReactDebugCurrentFrame = ReactDebugCurrentFrame$1;\n      ReactSharedInternals.ReactCurrentActQueue = ReactCurrentActQueue;\n    }\n\n    // by calls to these methods by a Babel plugin.\n    //\n    // In PROD (or in packages without access to React internals),\n    // they are left as they are instead.\n\n    function warn(format) {\n      {\n        {\n          for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n            args[_key - 1] = arguments[_key];\n          }\n          printWarning('warn', format, args);\n        }\n      }\n    }\n    function error(format) {\n      {\n        {\n          for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n            args[_key2 - 1] = arguments[_key2];\n          }\n          printWarning('error', format, args);\n        }\n      }\n    }\n    function printWarning(level, format, args) {\n      // When changing this logic, you might want to also\n      // update consoleWithStackDev.www.js as well.\n      {\n        var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n        var stack = ReactDebugCurrentFrame.getStackAddendum();\n        if (stack !== '') {\n          format += '%s';\n          args = args.concat([stack]);\n        } // eslint-disable-next-line react-internal/safe-string-coercion\n\n        var argsWithFormat = args.map(function (item) {\n          return String(item);\n        }); // Careful: RN currently depends on this prefix\n\n        argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n        // breaks IE9: https://github.com/facebook/react/issues/13610\n        // eslint-disable-next-line react-internal/no-production-logging\n\n        Function.prototype.apply.call(console[level], console, argsWithFormat);\n      }\n    }\n    var didWarnStateUpdateForUnmountedComponent = {};\n    function warnNoop(publicInstance, callerName) {\n      {\n        var _constructor = publicInstance.constructor;\n        var componentName = _constructor && (_constructor.displayName || _constructor.name) || 'ReactClass';\n        var warningKey = componentName + \".\" + callerName;\n        if (didWarnStateUpdateForUnmountedComponent[warningKey]) {\n          return;\n        }\n        error(\"Can't call %s on a component that is not yet mounted. \" + 'This is a no-op, but it might indicate a bug in your application. ' + 'Instead, assign to `this.state` directly or define a `state = {};` ' + 'class property with the desired state in the %s component.', callerName, componentName);\n        didWarnStateUpdateForUnmountedComponent[warningKey] = true;\n      }\n    }\n    /**\n     * This is the abstract API for an update queue.\n     */\n\n    var ReactNoopUpdateQueue = {\n      /**\n       * Checks whether or not this composite component is mounted.\n       * @param {ReactClass} publicInstance The instance we want to test.\n       * @return {boolean} True if mounted, false otherwise.\n       * @protected\n       * @final\n       */\n      isMounted: function (publicInstance) {\n        return false;\n      },\n      /**\n       * Forces an update. This should only be invoked when it is known with\n       * certainty that we are **not** in a DOM transaction.\n       *\n       * You may want to call this when you know that some deeper aspect of the\n       * component's state has changed but `setState` was not called.\n       *\n       * This will not invoke `shouldComponentUpdate`, but it will invoke\n       * `componentWillUpdate` and `componentDidUpdate`.\n       *\n       * @param {ReactClass} publicInstance The instance that should rerender.\n       * @param {?function} callback Called after component is updated.\n       * @param {?string} callerName name of the calling function in the public API.\n       * @internal\n       */\n      enqueueForceUpdate: function (publicInstance, callback, callerName) {\n        warnNoop(publicInstance, 'forceUpdate');\n      },\n      /**\n       * Replaces all of the state. Always use this or `setState` to mutate state.\n       * You should treat `this.state` as immutable.\n       *\n       * There is no guarantee that `this.state` will be immediately updated, so\n       * accessing `this.state` after calling this method may return the old value.\n       *\n       * @param {ReactClass} publicInstance The instance that should rerender.\n       * @param {object} completeState Next state.\n       * @param {?function} callback Called after component is updated.\n       * @param {?string} callerName name of the calling function in the public API.\n       * @internal\n       */\n      enqueueReplaceState: function (publicInstance, completeState, callback, callerName) {\n        warnNoop(publicInstance, 'replaceState');\n      },\n      /**\n       * Sets a subset of the state. This only exists because _pendingState is\n       * internal. This provides a merging strategy that is not available to deep\n       * properties which is confusing. TODO: Expose pendingState or don't use it\n       * during the merge.\n       *\n       * @param {ReactClass} publicInstance The instance that should rerender.\n       * @param {object} partialState Next partial state to be merged with state.\n       * @param {?function} callback Called after component is updated.\n       * @param {?string} Name of the calling function in the public API.\n       * @internal\n       */\n      enqueueSetState: function (publicInstance, partialState, callback, callerName) {\n        warnNoop(publicInstance, 'setState');\n      }\n    };\n    var assign = Object.assign;\n    var emptyObject = {};\n    {\n      Object.freeze(emptyObject);\n    }\n    /**\n     * Base class helpers for the updating state of a component.\n     */\n\n    function Component(props, context, updater) {\n      this.props = props;\n      this.context = context; // If a component has string refs, we will assign a different object later.\n\n      this.refs = emptyObject; // We initialize the default updater but the real one gets injected by the\n      // renderer.\n\n      this.updater = updater || ReactNoopUpdateQueue;\n    }\n    Component.prototype.isReactComponent = {};\n    /**\n     * Sets a subset of the state. Always use this to mutate\n     * state. You should treat `this.state` as immutable.\n     *\n     * There is no guarantee that `this.state` will be immediately updated, so\n     * accessing `this.state` after calling this method may return the old value.\n     *\n     * There is no guarantee that calls to `setState` will run synchronously,\n     * as they may eventually be batched together.  You can provide an optional\n     * callback that will be executed when the call to setState is actually\n     * completed.\n     *\n     * When a function is provided to setState, it will be called at some point in\n     * the future (not synchronously). It will be called with the up to date\n     * component arguments (state, props, context). These values can be different\n     * from this.* because your function may be called after receiveProps but before\n     * shouldComponentUpdate, and this new state, props, and context will not yet be\n     * assigned to this.\n     *\n     * @param {object|function} partialState Next partial state or function to\n     *        produce next partial state to be merged with current state.\n     * @param {?function} callback Called after state is updated.\n     * @final\n     * @protected\n     */\n\n    Component.prototype.setState = function (partialState, callback) {\n      if (typeof partialState !== 'object' && typeof partialState !== 'function' && partialState != null) {\n        throw new Error('takes an object of state variables to update or a ' + 'function which returns an object of state variables.');\n      }\n      this.updater.enqueueSetState(this, partialState, callback, 'setState');\n    };\n    /**\n     * Forces an update. This should only be invoked when it is known with\n     * certainty that we are **not** in a DOM transaction.\n     *\n     * You may want to call this when you know that some deeper aspect of the\n     * component's state has changed but `setState` was not called.\n     *\n     * This will not invoke `shouldComponentUpdate`, but it will invoke\n     * `componentWillUpdate` and `componentDidUpdate`.\n     *\n     * @param {?function} callback Called after update is complete.\n     * @final\n     * @protected\n     */\n\n    Component.prototype.forceUpdate = function (callback) {\n      this.updater.enqueueForceUpdate(this, callback, 'forceUpdate');\n    };\n    /**\n     * Deprecated APIs. These APIs used to exist on classic React classes but since\n     * we would like to deprecate them, we're not going to move them over to this\n     * modern base class. Instead, we define a getter that warns if it's accessed.\n     */\n\n    {\n      var deprecatedAPIs = {\n        isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],\n        replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']\n      };\n      var defineDeprecationWarning = function (methodName, info) {\n        Object.defineProperty(Component.prototype, methodName, {\n          get: function () {\n            warn('%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]);\n            return undefined;\n          }\n        });\n      };\n      for (var fnName in deprecatedAPIs) {\n        if (deprecatedAPIs.hasOwnProperty(fnName)) {\n          defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);\n        }\n      }\n    }\n    function ComponentDummy() {}\n    ComponentDummy.prototype = Component.prototype;\n    /**\n     * Convenience component with default shallow equality check for sCU.\n     */\n\n    function PureComponent(props, context, updater) {\n      this.props = props;\n      this.context = context; // If a component has string refs, we will assign a different object later.\n\n      this.refs = emptyObject;\n      this.updater = updater || ReactNoopUpdateQueue;\n    }\n    var pureComponentPrototype = PureComponent.prototype = new ComponentDummy();\n    pureComponentPrototype.constructor = PureComponent; // Avoid an extra prototype jump for these methods.\n\n    assign(pureComponentPrototype, Component.prototype);\n    pureComponentPrototype.isPureReactComponent = true;\n\n    // an immutable object with a single mutable value\n    function createRef() {\n      var refObject = {\n        current: null\n      };\n      {\n        Object.seal(refObject);\n      }\n      return refObject;\n    }\n    var isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\n\n    function isArray(a) {\n      return isArrayImpl(a);\n    }\n\n    // -----------------------------------------------------------------------------\n\n    var enableScopeAPI = false; // Experimental Create Event Handle API.\n    var enableCacheElement = false;\n    var enableTransitionTracing = false; // No known bugs, but needs performance testing\n\n    var enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber\n    var enableRenderableContext = false;\n    // Ready for next major.\n    //\n    // Alias __NEXT_MAJOR__ to false for easier skimming.\n    // -----------------------------------------------------------------------------\n\n    var __NEXT_MAJOR__ = false; // Not ready to break experimental yet.\n    // as a normal prop instead of stripping it from the props object.\n    // Passes `ref` as a normal prop instead of stripping it from the props object\n    // during element creation.\n\n    var enableRefAsProp = __NEXT_MAJOR__;\n    // stuff. Intended to enable React core members to more easily debug scheduling\n    // issues in DEV builds.\n\n    var enableDebugTracing = false;\n\n    /*\n     * The `'' + value` pattern (used in perf-sensitive code) throws for Symbol\n     * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n     *\n     * The functions in this module will throw an easier-to-understand,\n     * easier-to-debug exception with a clear errors message message explaining the\n     * problem. (Instead of a confusing exception thrown inside the implementation\n     * of the `value` object).\n     */\n    // $FlowFixMe[incompatible-return] only called in DEV, so void return is not possible.\n    function typeName(value) {\n      {\n        // toStringTag is needed for namespaced types like Temporal.Instant\n        var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;\n        var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object'; // $FlowFixMe[incompatible-return]\n\n        return type;\n      }\n    } // $FlowFixMe[incompatible-return] only called in DEV, so void return is not possible.\n\n    function willCoercionThrow(value) {\n      {\n        try {\n          testStringCoercion(value);\n          return false;\n        } catch (e) {\n          return true;\n        }\n      }\n    }\n    function testStringCoercion(value) {\n      // If you ended up here by following an exception call stack, here's what's\n      // happened: you supplied an object or symbol value to React (as a prop, key,\n      // DOM attribute, CSS property, string ref, etc.) and when React tried to\n      // coerce it to a string using `'' + value`, an exception was thrown.\n      //\n      // The most common types that will cause this exception are `Symbol` instances\n      // and Temporal objects like `Temporal.Instant`. But any object that has a\n      // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n      // exception. (Library authors do this to prevent users from using built-in\n      // numeric operators like `+` or comparison operators like `>=` because custom\n      // methods are needed to perform accurate arithmetic or comparison.)\n      //\n      // To fix the problem, coerce this object or symbol value to a string before\n      // passing it to React. The most reliable way is usually `String(value)`.\n      //\n      // To find which value is throwing, check the browser or debugger console.\n      // Before this exception was thrown, there should be `console.error` output\n      // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n      // problem and how that type was used: key, atrribute, input value prop, etc.\n      // In most cases, this console output also shows the component and its\n      // ancestor components where the exception happened.\n      //\n      // eslint-disable-next-line react-internal/safe-string-coercion\n      return '' + value;\n    }\n    function checkKeyStringCoercion(value) {\n      {\n        if (willCoercionThrow(value)) {\n          error('The provided key is an unsupported type %s.' + ' This value must be coerced to a string before using it here.', typeName(value));\n          return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n        }\n      }\n    }\n    function getWrappedName(outerType, innerType, wrapperName) {\n      var displayName = outerType.displayName;\n      if (displayName) {\n        return displayName;\n      }\n      var functionName = innerType.displayName || innerType.name || '';\n      return functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\n    } // Keep in sync with react-reconciler/getComponentNameFromFiber\n\n    function getContextName(type) {\n      return type.displayName || 'Context';\n    }\n    var REACT_CLIENT_REFERENCE$2 = Symbol.for('react.client.reference'); // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\n\n    function getComponentNameFromType(type) {\n      if (type == null) {\n        // Host root, text node or just invalid type.\n        return null;\n      }\n      if (typeof type === 'function') {\n        if (type.$$typeof === REACT_CLIENT_REFERENCE$2) {\n          // TODO: Create a convention for naming client references with debug info.\n          return null;\n        }\n        return type.displayName || type.name || null;\n      }\n      if (typeof type === 'string') {\n        return type;\n      }\n      switch (type) {\n        case REACT_FRAGMENT_TYPE:\n          return 'Fragment';\n        case REACT_PORTAL_TYPE:\n          return 'Portal';\n        case REACT_PROFILER_TYPE:\n          return 'Profiler';\n        case REACT_STRICT_MODE_TYPE:\n          return 'StrictMode';\n        case REACT_SUSPENSE_TYPE:\n          return 'Suspense';\n        case REACT_SUSPENSE_LIST_TYPE:\n          return 'SuspenseList';\n        case REACT_CACHE_TYPE:\n          {\n            return 'Cache';\n          }\n      }\n      if (typeof type === 'object') {\n        {\n          if (typeof type.tag === 'number') {\n            error('Received an unexpected object in getComponentNameFromType(). ' + 'This is likely a bug in React. Please file an issue.');\n          }\n        }\n        switch (type.$$typeof) {\n          case REACT_PROVIDER_TYPE:\n            {\n              var provider = type;\n              return getContextName(provider._context) + '.Provider';\n            }\n          case REACT_CONTEXT_TYPE:\n            var context = type;\n            {\n              return getContextName(context) + '.Consumer';\n            }\n          case REACT_CONSUMER_TYPE:\n            {\n              return null;\n            }\n          case REACT_FORWARD_REF_TYPE:\n            return getWrappedName(type, type.render, 'ForwardRef');\n          case REACT_MEMO_TYPE:\n            var outerName = type.displayName || null;\n            if (outerName !== null) {\n              return outerName;\n            }\n            return getComponentNameFromType(type.type) || 'Memo';\n          case REACT_LAZY_TYPE:\n            {\n              var lazyComponent = type;\n              var payload = lazyComponent._payload;\n              var init = lazyComponent._init;\n              try {\n                return getComponentNameFromType(init(payload));\n              } catch (x) {\n                return null;\n              }\n            }\n        }\n      }\n      return null;\n    }\n\n    // $FlowFixMe[method-unbinding]\n    var hasOwnProperty = Object.prototype.hasOwnProperty;\n    var REACT_CLIENT_REFERENCE$1 = Symbol.for('react.client.reference');\n    function isValidElementType(type) {\n      if (typeof type === 'string' || typeof type === 'function') {\n        return true;\n      } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n\n      if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden || type === REACT_OFFSCREEN_TYPE || enableScopeAPI || enableCacheElement || enableTransitionTracing) {\n        return true;\n      }\n      if (typeof type === 'object' && type !== null) {\n        if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || enableRenderableContext || type.$$typeof === REACT_FORWARD_REF_TYPE ||\n        // This needs to include all possible module reference object\n        // types supported by any Flight configuration anywhere since\n        // we don't know which Flight build this will end up being used\n        // with.\n        type.$$typeof === REACT_CLIENT_REFERENCE$1 || type.getModuleId !== undefined) {\n          return true;\n        }\n      }\n      return false;\n    }\n\n    // Helpers to patch console.logs to avoid logging during side-effect free\n    // replaying on render function. This currently only patches the object\n    // lazily which won't cover if the log function was extracted eagerly.\n    // We could also eagerly patch the method.\n    var disabledDepth = 0;\n    var prevLog;\n    var prevInfo;\n    var prevWarn;\n    var prevError;\n    var prevGroup;\n    var prevGroupCollapsed;\n    var prevGroupEnd;\n    function disabledLog() {}\n    disabledLog.__reactDisabledLog = true;\n    function disableLogs() {\n      {\n        if (disabledDepth === 0) {\n          /* eslint-disable react-internal/no-production-logging */\n          prevLog = console.log;\n          prevInfo = console.info;\n          prevWarn = console.warn;\n          prevError = console.error;\n          prevGroup = console.group;\n          prevGroupCollapsed = console.groupCollapsed;\n          prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n\n          var props = {\n            configurable: true,\n            enumerable: true,\n            value: disabledLog,\n            writable: true\n          }; // $FlowFixMe[cannot-write] Flow thinks console is immutable.\n\n          Object.defineProperties(console, {\n            info: props,\n            log: props,\n            warn: props,\n            error: props,\n            group: props,\n            groupCollapsed: props,\n            groupEnd: props\n          });\n          /* eslint-enable react-internal/no-production-logging */\n        }\n        disabledDepth++;\n      }\n    }\n    function reenableLogs() {\n      {\n        disabledDepth--;\n        if (disabledDepth === 0) {\n          /* eslint-disable react-internal/no-production-logging */\n          var props = {\n            configurable: true,\n            enumerable: true,\n            writable: true\n          }; // $FlowFixMe[cannot-write] Flow thinks console is immutable.\n\n          Object.defineProperties(console, {\n            log: assign({}, props, {\n              value: prevLog\n            }),\n            info: assign({}, props, {\n              value: prevInfo\n            }),\n            warn: assign({}, props, {\n              value: prevWarn\n            }),\n            error: assign({}, props, {\n              value: prevError\n            }),\n            group: assign({}, props, {\n              value: prevGroup\n            }),\n            groupCollapsed: assign({}, props, {\n              value: prevGroupCollapsed\n            }),\n            groupEnd: assign({}, props, {\n              value: prevGroupEnd\n            })\n          });\n          /* eslint-enable react-internal/no-production-logging */\n        }\n        if (disabledDepth < 0) {\n          error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');\n        }\n      }\n    }\n    var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\n    var prefix;\n    function describeBuiltInComponentFrame(name, ownerFn) {\n      {\n        if (prefix === undefined) {\n          // Extract the VM specific prefix used by each line.\n          try {\n            throw Error();\n          } catch (x) {\n            var match = x.stack.trim().match(/\\n( *(at )?)/);\n            prefix = match && match[1] || '';\n          }\n        } // We use the prefix to ensure our stacks line up with native stack frames.\n\n        return '\\n' + prefix + name;\n      }\n    }\n    var reentry = false;\n    var componentFrameCache;\n    {\n      var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n      componentFrameCache = new PossiblyWeakMap();\n    }\n    /**\n     * Leverages native browser/VM stack frames to get proper details (e.g.\n     * filename, line + col number) for a single component in a component stack. We\n     * do this by:\n     *   (1) throwing and catching an error in the function - this will be our\n     *       control error.\n     *   (2) calling the component which will eventually throw an error that we'll\n     *       catch - this will be our sample error.\n     *   (3) diffing the control and sample error stacks to find the stack frame\n     *       which represents our component.\n     */\n\n    function describeNativeComponentFrame(fn, construct) {\n      // If something asked for a stack inside a fake render, it should get ignored.\n      if (!fn || reentry) {\n        return '';\n      }\n      {\n        var frame = componentFrameCache.get(fn);\n        if (frame !== undefined) {\n          return frame;\n        }\n      }\n      reentry = true;\n      var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe[incompatible-type] It does accept undefined.\n\n      Error.prepareStackTrace = undefined;\n      var previousDispatcher;\n      {\n        previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function\n        // for warnings.\n\n        ReactCurrentDispatcher.current = null;\n        disableLogs();\n      }\n      /**\n       * Finding a common stack frame between sample and control errors can be\n       * tricky given the different types and levels of stack trace truncation from\n       * different JS VMs. So instead we'll attempt to control what that common\n       * frame should be through this object method:\n       * Having both the sample and control errors be in the function under the\n       * `DescribeNativeComponentFrameRoot` property, + setting the `name` and\n       * `displayName` properties of the function ensures that a stack\n       * frame exists that has the method name `DescribeNativeComponentFrameRoot` in\n       * it for both control and sample stacks.\n       */\n\n      var RunInRootFrame = {\n        DetermineComponentFrameRoot: function () {\n          var control;\n          try {\n            // This should throw.\n            if (construct) {\n              // Something should be setting the props in the constructor.\n              var Fake = function () {\n                throw Error();\n              }; // $FlowFixMe[prop-missing]\n\n              Object.defineProperty(Fake.prototype, 'props', {\n                set: function () {\n                  // We use a throwing setter instead of frozen or non-writable props\n                  // because that won't throw in a non-strict mode function.\n                  throw Error();\n                }\n              });\n              if (typeof Reflect === 'object' && Reflect.construct) {\n                // We construct a different control for this case to include any extra\n                // frames added by the construct call.\n                try {\n                  Reflect.construct(Fake, []);\n                } catch (x) {\n                  control = x;\n                }\n                Reflect.construct(fn, [], Fake);\n              } else {\n                try {\n                  Fake.call();\n                } catch (x) {\n                  control = x;\n                } // $FlowFixMe[prop-missing] found when upgrading Flow\n\n                fn.call(Fake.prototype);\n              }\n            } else {\n              try {\n                throw Error();\n              } catch (x) {\n                control = x;\n              } // TODO(luna): This will currently only throw if the function component\n              // tries to access React/ReactDOM/props. We should probably make this throw\n              // in simple components too\n\n              var maybePromise = fn(); // If the function component returns a promise, it's likely an async\n              // component, which we don't yet support. Attach a noop catch handler to\n              // silence the error.\n              // TODO: Implement component stacks for async client components?\n\n              if (maybePromise && typeof maybePromise.catch === 'function') {\n                maybePromise.catch(function () {});\n              }\n            }\n          } catch (sample) {\n            // This is inlined manually because closure doesn't do it for us.\n            if (sample && control && typeof sample.stack === 'string') {\n              return [sample.stack, control.stack];\n            }\n          }\n          return [null, null];\n        }\n      }; // $FlowFixMe[prop-missing]\n\n      RunInRootFrame.DetermineComponentFrameRoot.displayName = 'DetermineComponentFrameRoot';\n      var namePropDescriptor = Object.getOwnPropertyDescriptor(RunInRootFrame.DetermineComponentFrameRoot, 'name'); // Before ES6, the `name` property was not configurable.\n\n      if (namePropDescriptor && namePropDescriptor.configurable) {\n        // V8 utilizes a function's `name` property when generating a stack trace.\n        Object.defineProperty(RunInRootFrame.DetermineComponentFrameRoot,\n        // Configurable properties can be updated even if its writable descriptor\n        // is set to `false`.\n        // $FlowFixMe[cannot-write]\n        'name', {\n          value: 'DetermineComponentFrameRoot'\n        });\n      }\n      try {\n        var _RunInRootFrame$Deter = RunInRootFrame.DetermineComponentFrameRoot(),\n          sampleStack = _RunInRootFrame$Deter[0],\n          controlStack = _RunInRootFrame$Deter[1];\n        if (sampleStack && controlStack) {\n          // This extracts the first frame from the sample that isn't also in the control.\n          // Skipping one frame that we assume is the frame that calls the two.\n          var sampleLines = sampleStack.split('\\n');\n          var controlLines = controlStack.split('\\n');\n          var s = 0;\n          var c = 0;\n          while (s < sampleLines.length && !sampleLines[s].includes('DetermineComponentFrameRoot')) {\n            s++;\n          }\n          while (c < controlLines.length && !controlLines[c].includes('DetermineComponentFrameRoot')) {\n            c++;\n          } // We couldn't find our intentionally injected common root frame, attempt\n          // to find another common root frame by search from the bottom of the\n          // control stack...\n\n          if (s === sampleLines.length || c === controlLines.length) {\n            s = sampleLines.length - 1;\n            c = controlLines.length - 1;\n            while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\n              // We expect at least one stack frame to be shared.\n              // Typically this will be the root most one. However, stack frames may be\n              // cut off due to maximum stack limits. In this case, one maybe cut off\n              // earlier than the other. We assume that the sample is longer or the same\n              // and there for cut off earlier. So we should find the root most frame in\n              // the sample somewhere in the control.\n              c--;\n            }\n          }\n          for (; s >= 1 && c >= 0; s--, c--) {\n            // Next we find the first one that isn't the same which should be the\n            // frame that called our sample function and the control.\n            if (sampleLines[s] !== controlLines[c]) {\n              // In V8, the first line is describing the message but other VMs don't.\n              // If we're about to return the first line, and the control is also on the same\n              // line, that's a pretty good indicator that our sample threw at same line as\n              // the control. I.e. before we entered the sample frame. So we ignore this result.\n              // This can happen if you passed a class to function component, or non-function.\n              if (s !== 1 || c !== 1) {\n                do {\n                  s--;\n                  c--; // We may still have similar intermediate frames from the construct call.\n                  // The next one that isn't the same should be our match though.\n\n                  if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                    // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                    var _frame = '\\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled \"<anonymous>\"\n                    // but we have a user-provided \"displayName\"\n                    // splice it in to make the stack more readable.\n\n                    if (fn.displayName && _frame.includes('<anonymous>')) {\n                      _frame = _frame.replace('<anonymous>', fn.displayName);\n                    }\n                    if (true) {\n                      if (typeof fn === 'function') {\n                        componentFrameCache.set(fn, _frame);\n                      }\n                    } // Return the line we found.\n\n                    return _frame;\n                  }\n                } while (s >= 1 && c >= 0);\n              }\n              break;\n            }\n          }\n        }\n      } finally {\n        reentry = false;\n        {\n          ReactCurrentDispatcher.current = previousDispatcher;\n          reenableLogs();\n        }\n        Error.prepareStackTrace = previousPrepareStackTrace;\n      } // Fallback to just using the name if we couldn't make it throw.\n\n      var name = fn ? fn.displayName || fn.name : '';\n      var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\n      {\n        if (typeof fn === 'function') {\n          componentFrameCache.set(fn, syntheticFrame);\n        }\n      }\n      return syntheticFrame;\n    }\n    function describeFunctionComponentFrame(fn, ownerFn) {\n      {\n        return describeNativeComponentFrame(fn, false);\n      }\n    }\n    function shouldConstruct(Component) {\n      var prototype = Component.prototype;\n      return !!(prototype && prototype.isReactComponent);\n    }\n    function describeUnknownElementTypeFrameInDEV(type, ownerFn) {\n      if (type == null) {\n        return '';\n      }\n      if (typeof type === 'function') {\n        {\n          return describeNativeComponentFrame(type, shouldConstruct(type));\n        }\n      }\n      if (typeof type === 'string') {\n        return describeBuiltInComponentFrame(type);\n      }\n      switch (type) {\n        case REACT_SUSPENSE_TYPE:\n          return describeBuiltInComponentFrame('Suspense');\n        case REACT_SUSPENSE_LIST_TYPE:\n          return describeBuiltInComponentFrame('SuspenseList');\n      }\n      if (typeof type === 'object') {\n        switch (type.$$typeof) {\n          case REACT_FORWARD_REF_TYPE:\n            return describeFunctionComponentFrame(type.render);\n          case REACT_MEMO_TYPE:\n            // Memo may contain any component type so we recursively resolve it.\n            return describeUnknownElementTypeFrameInDEV(type.type, ownerFn);\n          case REACT_LAZY_TYPE:\n            {\n              var lazyComponent = type;\n              var payload = lazyComponent._payload;\n              var init = lazyComponent._init;\n              try {\n                // Lazy may contain any component type so we recursively resolve it.\n                return describeUnknownElementTypeFrameInDEV(init(payload), ownerFn);\n              } catch (x) {}\n            }\n        }\n      }\n      return '';\n    }\n    var ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var REACT_CLIENT_REFERENCE = Symbol.for('react.client.reference');\n    var specialPropKeyWarningShown;\n    var specialPropRefWarningShown;\n    var didWarnAboutStringRefs;\n    {\n      didWarnAboutStringRefs = {};\n    }\n    function hasValidRef(config) {\n      {\n        if (hasOwnProperty.call(config, 'ref')) {\n          var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n          if (getter && getter.isReactWarning) {\n            return false;\n          }\n        }\n      }\n      return config.ref !== undefined;\n    }\n    function hasValidKey(config) {\n      {\n        if (hasOwnProperty.call(config, 'key')) {\n          var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n          if (getter && getter.isReactWarning) {\n            return false;\n          }\n        }\n      }\n      return config.key !== undefined;\n    }\n    function warnIfStringRefCannotBeAutoConverted(config, self) {\n      {\n        if (typeof config.ref === 'string' && ReactCurrentOwner.current && self && ReactCurrentOwner.current.stateNode !== self) {\n          var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);\n          if (!didWarnAboutStringRefs[componentName]) {\n            error('Component \"%s\" contains the string ref \"%s\". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://react.dev/link/strict-mode-string-ref', getComponentNameFromType(ReactCurrentOwner.current.type), config.ref);\n            didWarnAboutStringRefs[componentName] = true;\n          }\n        }\n      }\n    }\n    function defineKeyPropWarningGetter(props, displayName) {\n      {\n        var warnAboutAccessingKey = function () {\n          if (!specialPropKeyWarningShown) {\n            specialPropKeyWarningShown = true;\n            error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://react.dev/link/special-props)', displayName);\n          }\n        };\n        warnAboutAccessingKey.isReactWarning = true;\n        Object.defineProperty(props, 'key', {\n          get: warnAboutAccessingKey,\n          configurable: true\n        });\n      }\n    }\n    function defineRefPropWarningGetter(props, displayName) {\n      {\n        {\n          var warnAboutAccessingRef = function () {\n            if (!specialPropRefWarningShown) {\n              specialPropRefWarningShown = true;\n              error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://react.dev/link/special-props)', displayName);\n            }\n          };\n          warnAboutAccessingRef.isReactWarning = true;\n          Object.defineProperty(props, 'ref', {\n            get: warnAboutAccessingRef,\n            configurable: true\n          });\n        }\n      }\n    }\n    /**\n     * Factory method to create a new React element. This no longer adheres to\n     * the class pattern, so do not use new to call it. Also, instanceof check\n     * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n     * if something is a React Element.\n     *\n     * @param {*} type\n     * @param {*} props\n     * @param {*} key\n     * @param {string|object} ref\n     * @param {*} owner\n     * @param {*} self A *temporary* helper to detect places where `this` is\n     * different from the `owner` when React.createElement is called, so that we\n     * can warn. We want to get rid of owner and replace string `ref`s with arrow\n     * functions, and as long as `this` and owner are the same, there will be no\n     * change in behavior.\n     * @param {*} source An annotation object (added by a transpiler or otherwise)\n     * indicating filename, line number, and/or other information.\n     * @internal\n     */\n\n    function ReactElement(type, key, _ref, self, source, owner, props) {\n      var ref;\n      {\n        ref = _ref;\n      }\n      var element;\n      {\n        // In prod, `ref` is a regular property. It will be removed in a\n        // future release.\n        element = {\n          // This tag allows us to uniquely identify this as a React Element\n          $$typeof: REACT_ELEMENT_TYPE,\n          // Built-in properties that belong on the element\n          type: type,\n          key: key,\n          ref: ref,\n          props: props,\n          // Record the component responsible for creating this element.\n          _owner: owner\n        };\n      }\n      {\n        // The validation flag is currently mutative. We put it on\n        // an external backing store so that we can freeze the whole object.\n        // This can be replaced with a WeakMap once they are implemented in\n        // commonly used development environments.\n        element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n        // the validation flag non-enumerable (where possible, which should\n        // include every environment we run tests in), so the test framework\n        // ignores it.\n\n        Object.defineProperty(element._store, 'validated', {\n          configurable: false,\n          enumerable: false,\n          writable: true,\n          value: false\n        }); // debugInfo contains Server Component debug information.\n\n        Object.defineProperty(element, '_debugInfo', {\n          configurable: false,\n          enumerable: false,\n          writable: true,\n          value: null\n        });\n        if (Object.freeze) {\n          Object.freeze(element.props);\n          Object.freeze(element);\n        }\n      }\n      return element;\n    }\n    /**\n     * Create and return a new ReactElement of the given type.\n     * See https://reactjs.org/docs/react-api.html#createelement\n     */\n\n    function createElement(type, config, children) {\n      {\n        if (!isValidElementType(type)) {\n          // This is an invalid element type.\n          //\n          // We warn in this case but don't throw. We expect the element creation to\n          // succeed and there will likely be errors in render.\n          var info = '';\n          if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n            info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\n          }\n          var typeString;\n          if (type === null) {\n            typeString = 'null';\n          } else if (isArray(type)) {\n            typeString = 'array';\n          } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n            typeString = \"<\" + (getComponentNameFromType(type.type) || 'Unknown') + \" />\";\n            info = ' Did you accidentally export a JSX literal instead of a component?';\n          } else {\n            typeString = typeof type;\n          }\n          error('React.createElement: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\n        } else {\n          // This is a valid element type.\n          // Skip key warning if the type isn't valid since our key validation logic\n          // doesn't expect a non-string/function type and can throw confusing\n          // errors. We don't want exception behavior to differ between dev and\n          // prod. (Rendering will throw with a helpful message and as soon as the\n          // type is fixed, the key warnings will appear.)\n          for (var i = 2; i < arguments.length; i++) {\n            validateChildKeys(arguments[i], type);\n          }\n        } // Unlike the jsx() runtime, createElement() doesn't warn about key spread.\n      }\n      var propName; // Reserved names are extracted\n\n      var props = {};\n      var key = null;\n      var ref = null;\n      if (config != null) {\n        if (hasValidRef(config)) {\n          {\n            ref = config.ref;\n          }\n          {\n            warnIfStringRefCannotBeAutoConverted(config, config.__self);\n          }\n        }\n        if (hasValidKey(config)) {\n          {\n            checkKeyStringCoercion(config.key);\n          }\n          key = '' + config.key;\n        } // Remaining properties are added to a new props object\n\n        for (propName in config) {\n          if (hasOwnProperty.call(config, propName) &&\n          // Skip over reserved prop names\n          propName !== 'key' && propName !== 'ref' &&\n          // Even though we don't use these anymore in the runtime, we don't want\n          // them to appear as props, so in createElement we filter them out.\n          // We don't have to do this in the jsx() runtime because the jsx()\n          // transform never passed these as props; it used separate arguments.\n          propName !== '__self' && propName !== '__source') {\n            props[propName] = config[propName];\n          }\n        }\n      } // Children can be more than one argument, and those are transferred onto\n      // the newly allocated props object.\n\n      var childrenLength = arguments.length - 2;\n      if (childrenLength === 1) {\n        props.children = children;\n      } else if (childrenLength > 1) {\n        var childArray = Array(childrenLength);\n        for (var _i = 0; _i < childrenLength; _i++) {\n          childArray[_i] = arguments[_i + 2];\n        }\n        {\n          if (Object.freeze) {\n            Object.freeze(childArray);\n          }\n        }\n        props.children = childArray;\n      } // Resolve default props\n\n      if (type && type.defaultProps) {\n        var defaultProps = type.defaultProps;\n        for (propName in defaultProps) {\n          if (props[propName] === undefined) {\n            props[propName] = defaultProps[propName];\n          }\n        }\n      }\n      {\n        if (key || ref) {\n          var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n          if (key) {\n            defineKeyPropWarningGetter(props, displayName);\n          }\n          if (ref) {\n            defineRefPropWarningGetter(props, displayName);\n          }\n        }\n      }\n      var element = ReactElement(type, key, ref, undefined, undefined, ReactCurrentOwner.current, props);\n      if (type === REACT_FRAGMENT_TYPE) {\n        validateFragmentProps(element);\n      }\n      return element;\n    }\n    var didWarnAboutDeprecatedCreateFactory = false;\n    /**\n     * Return a function that produces ReactElements of a given type.\n     * See https://reactjs.org/docs/react-api.html#createfactory\n     */\n\n    function createFactory(type) {\n      var factory = createElement.bind(null, type); // Expose the type on the factory and the prototype so that it can be\n      // easily accessed on elements. E.g. `<Foo />.type === Foo`.\n      // This should not be named `constructor` since this may not be the function\n      // that created the element, and it may not even be a constructor.\n      // Legacy hook: remove it\n\n      factory.type = type;\n      {\n        if (!didWarnAboutDeprecatedCreateFactory) {\n          didWarnAboutDeprecatedCreateFactory = true;\n          warn('React.createFactory() is deprecated and will be removed in ' + 'a future major release. Consider using JSX ' + 'or use React.createElement() directly instead.');\n        } // Legacy hook: remove it\n\n        Object.defineProperty(factory, 'type', {\n          enumerable: false,\n          get: function () {\n            warn('Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.');\n            Object.defineProperty(this, 'type', {\n              value: type\n            });\n            return type;\n          }\n        });\n      }\n      return factory;\n    }\n    function cloneAndReplaceKey(oldElement, newKey) {\n      return ReactElement(oldElement.type, newKey,\n      // When enableRefAsProp is on, this argument is ignored. This check only\n      // exists to avoid the `ref` access warning.\n      oldElement.ref, undefined, undefined, oldElement._owner, oldElement.props);\n    }\n    /**\n     * Clone and return a new ReactElement using element as the starting point.\n     * See https://reactjs.org/docs/react-api.html#cloneelement\n     */\n\n    function cloneElement(element, config, children) {\n      if (element === null || element === undefined) {\n        throw new Error(\"The argument must be a React element, but you passed \" + element + \".\");\n      }\n      var propName; // Original props are copied\n\n      var props = assign({}, element.props); // Reserved names are extracted\n\n      var key = element.key;\n      var ref = element.ref; // Owner will be preserved, unless ref is overridden\n\n      var owner = element._owner;\n      if (config != null) {\n        if (hasValidRef(config)) {\n          {\n            // Silently steal the ref from the parent.\n            ref = config.ref;\n          }\n          owner = ReactCurrentOwner.current;\n        }\n        if (hasValidKey(config)) {\n          {\n            checkKeyStringCoercion(config.key);\n          }\n          key = '' + config.key;\n        } // Remaining properties override existing props\n\n        var defaultProps;\n        if (element.type && element.type.defaultProps) {\n          defaultProps = element.type.defaultProps;\n        }\n        for (propName in config) {\n          if (hasOwnProperty.call(config, propName) &&\n          // Skip over reserved prop names\n          propName !== 'key' && propName !== 'ref' &&\n          // ...and maybe these, too, though we currently rely on them for\n          // warnings and debug information in dev. Need to decide if we're OK\n          // with dropping them. In the jsx() runtime it's not an issue because\n          // the data gets passed as separate arguments instead of props, but\n          // it would be nice to stop relying on them entirely so we can drop\n          // them from the internal Fiber field.\n          propName !== '__self' && propName !== '__source' &&\n          // Undefined `ref` is ignored by cloneElement. We treat it the same as\n          // if the property were missing. This is mostly for\n          // backwards compatibility.\n          !enableRefAsProp) {\n            if (config[propName] === undefined && defaultProps !== undefined) {\n              // Resolve default props\n              props[propName] = defaultProps[propName];\n            } else {\n              props[propName] = config[propName];\n            }\n          }\n        }\n      } // Children can be more than one argument, and those are transferred onto\n      // the newly allocated props object.\n\n      var childrenLength = arguments.length - 2;\n      if (childrenLength === 1) {\n        props.children = children;\n      } else if (childrenLength > 1) {\n        var childArray = Array(childrenLength);\n        for (var i = 0; i < childrenLength; i++) {\n          childArray[i] = arguments[i + 2];\n        }\n        props.children = childArray;\n      }\n      var clonedElement = ReactElement(element.type, key, ref, undefined, undefined, owner, props);\n      for (var _i2 = 2; _i2 < arguments.length; _i2++) {\n        validateChildKeys(arguments[_i2], clonedElement.type);\n      }\n      return clonedElement;\n    }\n    function getDeclarationErrorAddendum() {\n      {\n        if (ReactCurrentOwner.current) {\n          var name = getComponentNameFromType(ReactCurrentOwner.current.type);\n          if (name) {\n            return '\\n\\nCheck the render method of `' + name + '`.';\n          }\n        }\n        return '';\n      }\n    }\n    /**\n     * Ensure that every element either is passed in a static location, in an\n     * array with an explicit keys property defined, or in an object literal\n     * with valid key property.\n     *\n     * @internal\n     * @param {ReactNode} node Statically passed child of any type.\n     * @param {*} parentType node's parent's type.\n     */\n\n    function validateChildKeys(node, parentType) {\n      {\n        if (typeof node !== 'object' || !node) {\n          return;\n        }\n        if (node.$$typeof === REACT_CLIENT_REFERENCE) ;else if (isArray(node)) {\n          for (var i = 0; i < node.length; i++) {\n            var child = node[i];\n            if (isValidElement(child)) {\n              validateExplicitKey(child, parentType);\n            }\n          }\n        } else if (isValidElement(node)) {\n          // This element was passed in a valid location.\n          if (node._store) {\n            node._store.validated = true;\n          }\n        } else {\n          var iteratorFn = getIteratorFn(node);\n          if (typeof iteratorFn === 'function') {\n            // Entry iterators used to provide implicit keys,\n            // but now we print a separate warning for them later.\n            if (iteratorFn !== node.entries) {\n              var iterator = iteratorFn.call(node);\n              var step;\n              while (!(step = iterator.next()).done) {\n                if (isValidElement(step.value)) {\n                  validateExplicitKey(step.value, parentType);\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    /**\n     * Verifies the object is a ReactElement.\n     * See https://reactjs.org/docs/react-api.html#isvalidelement\n     * @param {?object} object\n     * @return {boolean} True if `object` is a ReactElement.\n     * @final\n     */\n\n    function isValidElement(object) {\n      return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n    }\n    var ownerHasKeyUseWarning = {};\n    /**\n     * Warn if the element doesn't have an explicit key assigned to it.\n     * This element is in an array. The array could grow and shrink or be\n     * reordered. All children that haven't already been validated are required to\n     * have a \"key\" property assigned to it. Error statuses are cached so a warning\n     * will only be shown once.\n     *\n     * @internal\n     * @param {ReactElement} element Element that requires a key.\n     * @param {*} parentType element's parent's type.\n     */\n\n    function validateExplicitKey(element, parentType) {\n      {\n        if (!element._store || element._store.validated || element.key != null) {\n          return;\n        }\n        element._store.validated = true;\n        var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n        if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n          return;\n        }\n        ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n        // property, it may be the creator of the child that's responsible for\n        // assigning it a key.\n\n        var childOwner = '';\n        if (element && element._owner && element._owner !== ReactCurrentOwner.current) {\n          // Give the component that originally created this child.\n          childOwner = \" It was passed a child from \" + getComponentNameFromType(element._owner.type) + \".\";\n        }\n        setCurrentlyValidatingElement(element);\n        error('Each child in a list should have a unique \"key\" prop.' + '%s%s See https://react.dev/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);\n        setCurrentlyValidatingElement(null);\n      }\n    }\n    function setCurrentlyValidatingElement(element) {\n      {\n        if (element) {\n          var owner = element._owner;\n          var stack = describeUnknownElementTypeFrameInDEV(element.type, owner ? owner.type : null);\n          ReactDebugCurrentFrame.setExtraStackFrame(stack);\n        } else {\n          ReactDebugCurrentFrame.setExtraStackFrame(null);\n        }\n      }\n    }\n    function getCurrentComponentErrorInfo(parentType) {\n      {\n        var info = getDeclarationErrorAddendum();\n        if (!info) {\n          var parentName = getComponentNameFromType(parentType);\n          if (parentName) {\n            info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n          }\n        }\n        return info;\n      }\n    }\n    /**\n     * Given a fragment, validate that it can only be provided with fragment props\n     * @param {ReactElement} fragment\n     */\n\n    function validateFragmentProps(fragment) {\n      // TODO: Move this to render phase instead of at element creation.\n      {\n        var keys = Object.keys(fragment.props);\n        for (var i = 0; i < keys.length; i++) {\n          var key = keys[i];\n          if (key !== 'children' && key !== 'key') {\n            setCurrentlyValidatingElement(fragment);\n            error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\n            setCurrentlyValidatingElement(null);\n            break;\n          }\n        }\n        if (fragment.ref !== null) {\n          setCurrentlyValidatingElement(fragment);\n          error('Invalid attribute `ref` supplied to `React.Fragment`.');\n          setCurrentlyValidatingElement(null);\n        }\n      }\n    }\n    var SEPARATOR = '.';\n    var SUBSEPARATOR = ':';\n    /**\n     * Escape and wrap key so it is safe to use as a reactid\n     *\n     * @param {string} key to be escaped.\n     * @return {string} the escaped key.\n     */\n\n    function escape(key) {\n      var escapeRegex = /[=:]/g;\n      var escaperLookup = {\n        '=': '=0',\n        ':': '=2'\n      };\n      var escapedString = key.replace(escapeRegex, function (match) {\n        return escaperLookup[match];\n      });\n      return '$' + escapedString;\n    }\n    /**\n     * TODO: Test that a single child and an array with one item have the same key\n     * pattern.\n     */\n\n    var didWarnAboutMaps = false;\n    var userProvidedKeyEscapeRegex = /\\/+/g;\n    function escapeUserProvidedKey(text) {\n      return text.replace(userProvidedKeyEscapeRegex, '$&/');\n    }\n    /**\n     * Generate a key string that identifies a element within a set.\n     *\n     * @param {*} element A element that could contain a manual key.\n     * @param {number} index Index that is used if a manual key is not provided.\n     * @return {string}\n     */\n\n    function getElementKey(element, index) {\n      // Do some typechecking here since we call this blindly. We want to ensure\n      // that we don't block potential future ES APIs.\n      if (typeof element === 'object' && element !== null && element.key != null) {\n        // Explicit key\n        {\n          checkKeyStringCoercion(element.key);\n        }\n        return escape('' + element.key);\n      } // Implicit key determined by the index in the set\n\n      return index.toString(36);\n    }\n    function noop$1() {}\n    function resolveThenable(thenable) {\n      switch (thenable.status) {\n        case 'fulfilled':\n          {\n            var fulfilledValue = thenable.value;\n            return fulfilledValue;\n          }\n        case 'rejected':\n          {\n            var rejectedError = thenable.reason;\n            throw rejectedError;\n          }\n        default:\n          {\n            if (typeof thenable.status === 'string') {\n              // Only instrument the thenable if the status if not defined. If\n              // it's defined, but an unknown value, assume it's been instrumented by\n              // some custom userspace implementation. We treat it as \"pending\".\n              // Attach a dummy listener, to ensure that any lazy initialization can\n              // happen. Flight lazily parses JSON when the value is actually awaited.\n              thenable.then(noop$1, noop$1);\n            } else {\n              // This is an uncached thenable that we haven't seen before.\n              // TODO: Detect infinite ping loops caused by uncached promises.\n              var pendingThenable = thenable;\n              pendingThenable.status = 'pending';\n              pendingThenable.then(function (fulfilledValue) {\n                if (thenable.status === 'pending') {\n                  var fulfilledThenable = thenable;\n                  fulfilledThenable.status = 'fulfilled';\n                  fulfilledThenable.value = fulfilledValue;\n                }\n              }, function (error) {\n                if (thenable.status === 'pending') {\n                  var rejectedThenable = thenable;\n                  rejectedThenable.status = 'rejected';\n                  rejectedThenable.reason = error;\n                }\n              });\n            } // Check one more time in case the thenable resolved synchronously.\n\n            switch (thenable.status) {\n              case 'fulfilled':\n                {\n                  var fulfilledThenable = thenable;\n                  return fulfilledThenable.value;\n                }\n              case 'rejected':\n                {\n                  var rejectedThenable = thenable;\n                  var _rejectedError = rejectedThenable.reason;\n                  throw _rejectedError;\n                }\n            }\n          }\n      }\n      throw thenable;\n    }\n    function mapIntoArray(children, array, escapedPrefix, nameSoFar, callback) {\n      var type = typeof children;\n      if (type === 'undefined' || type === 'boolean') {\n        // All of the above are perceived as null.\n        children = null;\n      }\n      var invokeCallback = false;\n      if (children === null) {\n        invokeCallback = true;\n      } else {\n        switch (type) {\n          case 'bigint':\n            {\n              break;\n            }\n\n          // fallthrough for enabled BigInt support\n\n          case 'string':\n          case 'number':\n            invokeCallback = true;\n            break;\n          case 'object':\n            switch (children.$$typeof) {\n              case REACT_ELEMENT_TYPE:\n              case REACT_PORTAL_TYPE:\n                invokeCallback = true;\n                break;\n              case REACT_LAZY_TYPE:\n                var payload = children._payload;\n                var init = children._init;\n                return mapIntoArray(init(payload), array, escapedPrefix, nameSoFar, callback);\n            }\n        }\n      }\n      if (invokeCallback) {\n        var _child = children;\n        var mappedChild = callback(_child); // If it's the only child, treat the name as if it was wrapped in an array\n        // so that it's consistent if the number of children grows:\n\n        var childKey = nameSoFar === '' ? SEPARATOR + getElementKey(_child, 0) : nameSoFar;\n        if (isArray(mappedChild)) {\n          var escapedChildKey = '';\n          if (childKey != null) {\n            escapedChildKey = escapeUserProvidedKey(childKey) + '/';\n          }\n          mapIntoArray(mappedChild, array, escapedChildKey, '', function (c) {\n            return c;\n          });\n        } else if (mappedChild != null) {\n          if (isValidElement(mappedChild)) {\n            {\n              // The `if` statement here prevents auto-disabling of the safe\n              // coercion ESLint rule, so we must manually disable it below.\n              // $FlowFixMe[incompatible-type] Flow incorrectly thinks React.Portal doesn't have a key\n              if (mappedChild.key && (!_child || _child.key !== mappedChild.key)) {\n                checkKeyStringCoercion(mappedChild.key);\n              }\n            }\n            mappedChild = cloneAndReplaceKey(mappedChild,\n            // Keep both the (mapped) and old keys if they differ, just as\n            // traverseAllChildren used to do for objects as children\n            escapedPrefix + (\n            // $FlowFixMe[incompatible-type] Flow incorrectly thinks React.Portal doesn't have a key\n            mappedChild.key && (!_child || _child.key !== mappedChild.key) ? escapeUserProvidedKey(\n            // $FlowFixMe[unsafe-addition]\n            '' + mappedChild.key // eslint-disable-line react-internal/safe-string-coercion\n            ) + '/' : '') + childKey);\n          }\n          array.push(mappedChild);\n        }\n        return 1;\n      }\n      var child;\n      var nextName;\n      var subtreeCount = 0; // Count of children found in the current subtree.\n\n      var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;\n      if (isArray(children)) {\n        for (var i = 0; i < children.length; i++) {\n          child = children[i];\n          nextName = nextNamePrefix + getElementKey(child, i);\n          subtreeCount += mapIntoArray(child, array, escapedPrefix, nextName, callback);\n        }\n      } else {\n        var iteratorFn = getIteratorFn(children);\n        if (typeof iteratorFn === 'function') {\n          var iterableChildren = children;\n          {\n            // Warn about using Maps as children\n            if (iteratorFn === iterableChildren.entries) {\n              if (!didWarnAboutMaps) {\n                warn('Using Maps as children is not supported. ' + 'Use an array of keyed ReactElements instead.');\n              }\n              didWarnAboutMaps = true;\n            }\n          }\n          var iterator = iteratorFn.call(iterableChildren);\n          var step;\n          var ii = 0; // $FlowFixMe[incompatible-use] `iteratorFn` might return null according to typing.\n\n          while (!(step = iterator.next()).done) {\n            child = step.value;\n            nextName = nextNamePrefix + getElementKey(child, ii++);\n            subtreeCount += mapIntoArray(child, array, escapedPrefix, nextName, callback);\n          }\n        } else if (type === 'object') {\n          if (typeof children.then === 'function') {\n            return mapIntoArray(resolveThenable(children), array, escapedPrefix, nameSoFar, callback);\n          } // eslint-disable-next-line react-internal/safe-string-coercion\n\n          var childrenString = String(children);\n          throw new Error(\"Objects are not valid as a React child (found: \" + (childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString) + \"). \" + 'If you meant to render a collection of children, use an array ' + 'instead.');\n        }\n      }\n      return subtreeCount;\n    }\n    /**\n     * Maps children that are typically specified as `props.children`.\n     *\n     * See https://reactjs.org/docs/react-api.html#reactchildrenmap\n     *\n     * The provided mapFunction(child, index) will be called for each\n     * leaf child.\n     *\n     * @param {?*} children Children tree container.\n     * @param {function(*, int)} func The map function.\n     * @param {*} context Context for mapFunction.\n     * @return {object} Object containing the ordered map of results.\n     */\n\n    function mapChildren(children, func, context) {\n      if (children == null) {\n        // $FlowFixMe limitation refining abstract types in Flow\n        return children;\n      }\n      var result = [];\n      var count = 0;\n      mapIntoArray(children, result, '', '', function (child) {\n        return func.call(context, child, count++);\n      });\n      return result;\n    }\n    /**\n     * Count the number of children that are typically specified as\n     * `props.children`.\n     *\n     * See https://reactjs.org/docs/react-api.html#reactchildrencount\n     *\n     * @param {?*} children Children tree container.\n     * @return {number} The number of children.\n     */\n\n    function countChildren(children) {\n      var n = 0;\n      mapChildren(children, function () {\n        n++; // Don't return anything\n      });\n      return n;\n    }\n    /**\n     * Iterates through children that are typically specified as `props.children`.\n     *\n     * See https://reactjs.org/docs/react-api.html#reactchildrenforeach\n     *\n     * The provided forEachFunc(child, index) will be called for each\n     * leaf child.\n     *\n     * @param {?*} children Children tree container.\n     * @param {function(*, int)} forEachFunc\n     * @param {*} forEachContext Context for forEachContext.\n     */\n\n    function forEachChildren(children, forEachFunc, forEachContext) {\n      mapChildren(children,\n      // $FlowFixMe[missing-this-annot]\n      function () {\n        forEachFunc.apply(this, arguments); // Don't return anything.\n      }, forEachContext);\n    }\n    /**\n     * Flatten a children object (typically specified as `props.children`) and\n     * return an array with appropriately re-keyed children.\n     *\n     * See https://reactjs.org/docs/react-api.html#reactchildrentoarray\n     */\n\n    function toArray(children) {\n      return mapChildren(children, function (child) {\n        return child;\n      }) || [];\n    }\n    /**\n     * Returns the first child in a collection of children and verifies that there\n     * is only one child in the collection.\n     *\n     * See https://reactjs.org/docs/react-api.html#reactchildrenonly\n     *\n     * The current implementation of this function assumes that a single child gets\n     * passed without a wrapper, but the purpose of this helper function is to\n     * abstract away the particular structure of children.\n     *\n     * @param {?object} children Child collection structure.\n     * @return {ReactElement} The first and only `ReactElement` contained in the\n     * structure.\n     */\n\n    function onlyChild(children) {\n      if (!isValidElement(children)) {\n        throw new Error('React.Children.only expected to receive a single React element child.');\n      }\n      return children;\n    }\n    function createContext(defaultValue) {\n      // TODO: Second argument used to be an optional `calculateChangedBits`\n      // function. Warn to reserve for future use?\n      var context = {\n        $$typeof: REACT_CONTEXT_TYPE,\n        // As a workaround to support multiple concurrent renderers, we categorize\n        // some renderers as primary and others as secondary. We only expect\n        // there to be two concurrent renderers at most: React Native (primary) and\n        // Fabric (secondary); React DOM (primary) and React ART (secondary).\n        // Secondary renderers store their context values on separate fields.\n        _currentValue: defaultValue,\n        _currentValue2: defaultValue,\n        // Used to track how many concurrent renderers this context currently\n        // supports within in a single renderer. Such as parallel server rendering.\n        _threadCount: 0,\n        // These are circular\n        Provider: null,\n        Consumer: null\n      };\n      {\n        context.Provider = {\n          $$typeof: REACT_PROVIDER_TYPE,\n          _context: context\n        };\n        {\n          var Consumer = {\n            $$typeof: REACT_CONTEXT_TYPE,\n            _context: context\n          };\n          Object.defineProperties(Consumer, {\n            Provider: {\n              get: function () {\n                return context.Provider;\n              },\n              set: function (_Provider) {\n                context.Provider = _Provider;\n              }\n            },\n            _currentValue: {\n              get: function () {\n                return context._currentValue;\n              },\n              set: function (_currentValue) {\n                context._currentValue = _currentValue;\n              }\n            },\n            _currentValue2: {\n              get: function () {\n                return context._currentValue2;\n              },\n              set: function (_currentValue2) {\n                context._currentValue2 = _currentValue2;\n              }\n            },\n            _threadCount: {\n              get: function () {\n                return context._threadCount;\n              },\n              set: function (_threadCount) {\n                context._threadCount = _threadCount;\n              }\n            },\n            Consumer: {\n              get: function () {\n                return context.Consumer;\n              }\n            },\n            displayName: {\n              get: function () {\n                return context.displayName;\n              },\n              set: function (displayName) {}\n            }\n          });\n          context.Consumer = Consumer;\n        }\n      }\n      {\n        context._currentRenderer = null;\n        context._currentRenderer2 = null;\n      }\n      return context;\n    }\n    var Uninitialized = -1;\n    var Pending = 0;\n    var Resolved = 1;\n    var Rejected = 2;\n    function lazyInitializer(payload) {\n      if (payload._status === Uninitialized) {\n        var ctor = payload._result;\n        var thenable = ctor(); // Transition to the next state.\n        // This might throw either because it's missing or throws. If so, we treat it\n        // as still uninitialized and try again next time. Which is the same as what\n        // happens if the ctor or any wrappers processing the ctor throws. This might\n        // end up fixing it if the resolution was a concurrency bug.\n\n        thenable.then(function (moduleObject) {\n          if (payload._status === Pending || payload._status === Uninitialized) {\n            // Transition to the next state.\n            var resolved = payload;\n            resolved._status = Resolved;\n            resolved._result = moduleObject;\n          }\n        }, function (error) {\n          if (payload._status === Pending || payload._status === Uninitialized) {\n            // Transition to the next state.\n            var rejected = payload;\n            rejected._status = Rejected;\n            rejected._result = error;\n          }\n        });\n        if (payload._status === Uninitialized) {\n          // In case, we're still uninitialized, then we're waiting for the thenable\n          // to resolve. Set it as pending in the meantime.\n          var pending = payload;\n          pending._status = Pending;\n          pending._result = thenable;\n        }\n      }\n      if (payload._status === Resolved) {\n        var moduleObject = payload._result;\n        {\n          if (moduleObject === undefined) {\n            error('lazy: Expected the result of a dynamic imp' + 'ort() call. ' + 'Instead received: %s\\n\\nYour code should look like: \\n  ' +\n            // Break up imports to avoid accidentally parsing them as dependencies.\n            'const MyComponent = lazy(() => imp' + \"ort('./MyComponent'))\\n\\n\" + 'Did you accidentally put curly braces around the import?', moduleObject);\n          }\n        }\n        {\n          if (!('default' in moduleObject)) {\n            error('lazy: Expected the result of a dynamic imp' + 'ort() call. ' + 'Instead received: %s\\n\\nYour code should look like: \\n  ' +\n            // Break up imports to avoid accidentally parsing them as dependencies.\n            'const MyComponent = lazy(() => imp' + \"ort('./MyComponent'))\", moduleObject);\n          }\n        }\n        return moduleObject.default;\n      } else {\n        throw payload._result;\n      }\n    }\n    function lazy(ctor) {\n      var payload = {\n        // We use these fields to store the result.\n        _status: Uninitialized,\n        _result: ctor\n      };\n      var lazyType = {\n        $$typeof: REACT_LAZY_TYPE,\n        _payload: payload,\n        _init: lazyInitializer\n      };\n      {\n        // In production, this would just set it on the object.\n        var defaultProps;\n        var propTypes; // $FlowFixMe[prop-missing]\n\n        Object.defineProperties(lazyType, {\n          defaultProps: {\n            configurable: true,\n            get: function () {\n              return defaultProps;\n            },\n            // $FlowFixMe[missing-local-annot]\n            set: function (newDefaultProps) {\n              error('It is not supported to assign `defaultProps` to ' + 'a lazy component import. Either specify them where the component ' + 'is defined, or create a wrapping component around it.');\n              defaultProps = newDefaultProps; // Match production behavior more closely:\n              // $FlowFixMe[prop-missing]\n\n              Object.defineProperty(lazyType, 'defaultProps', {\n                enumerable: true\n              });\n            }\n          },\n          propTypes: {\n            configurable: true,\n            get: function () {\n              return propTypes;\n            },\n            // $FlowFixMe[missing-local-annot]\n            set: function (newPropTypes) {\n              error('It is not supported to assign `propTypes` to ' + 'a lazy component import. Either specify them where the component ' + 'is defined, or create a wrapping component around it.');\n              propTypes = newPropTypes; // Match production behavior more closely:\n              // $FlowFixMe[prop-missing]\n\n              Object.defineProperty(lazyType, 'propTypes', {\n                enumerable: true\n              });\n            }\n          }\n        });\n      }\n      return lazyType;\n    }\n    function forwardRef(render) {\n      {\n        if (render != null && render.$$typeof === REACT_MEMO_TYPE) {\n          error('forwardRef requires a render function but received a `memo` ' + 'component. Instead of forwardRef(memo(...)), use ' + 'memo(forwardRef(...)).');\n        } else if (typeof render !== 'function') {\n          error('forwardRef requires a render function but was given %s.', render === null ? 'null' : typeof render);\n        } else {\n          if (render.length !== 0 && render.length !== 2) {\n            error('forwardRef render functions accept exactly two parameters: props and ref. %s', render.length === 1 ? 'Did you forget to use the ref parameter?' : 'Any additional parameter will be undefined.');\n          }\n        }\n        if (render != null) {\n          if (render.defaultProps != null) {\n            error('forwardRef render functions do not support defaultProps. ' + 'Did you accidentally pass a React component?');\n          }\n        }\n      }\n      var elementType = {\n        $$typeof: REACT_FORWARD_REF_TYPE,\n        render: render\n      };\n      {\n        var ownName;\n        Object.defineProperty(elementType, 'displayName', {\n          enumerable: false,\n          configurable: true,\n          get: function () {\n            return ownName;\n          },\n          set: function (name) {\n            ownName = name; // The inner component shouldn't inherit this display name in most cases,\n            // because the component may be used elsewhere.\n            // But it's nice for anonymous functions to inherit the name,\n            // so that our component-stack generation logic will display their frames.\n            // An anonymous function generally suggests a pattern like:\n            //   React.forwardRef((props, ref) => {...});\n            // This kind of inner function is not used elsewhere so the side effect is okay.\n\n            if (!render.name && !render.displayName) {\n              render.displayName = name;\n            }\n          }\n        });\n      }\n      return elementType;\n    }\n    function memo(type, compare) {\n      {\n        if (!isValidElementType(type)) {\n          error('memo: The first argument must be a component. Instead ' + 'received: %s', type === null ? 'null' : typeof type);\n        }\n      }\n      var elementType = {\n        $$typeof: REACT_MEMO_TYPE,\n        type: type,\n        compare: compare === undefined ? null : compare\n      };\n      {\n        var ownName;\n        Object.defineProperty(elementType, 'displayName', {\n          enumerable: false,\n          configurable: true,\n          get: function () {\n            return ownName;\n          },\n          set: function (name) {\n            ownName = name; // The inner component shouldn't inherit this display name in most cases,\n            // because the component may be used elsewhere.\n            // But it's nice for anonymous functions to inherit the name,\n            // so that our component-stack generation logic will display their frames.\n            // An anonymous function generally suggests a pattern like:\n            //   React.memo((props) => {...});\n            // This kind of inner function is not used elsewhere so the side effect is okay.\n\n            if (!type.name && !type.displayName) {\n              type.displayName = name;\n            }\n          }\n        });\n      }\n      return elementType;\n    }\n    var UNTERMINATED = 0;\n    var TERMINATED = 1;\n    var ERRORED = 2;\n    function createCacheRoot() {\n      return new WeakMap();\n    }\n    function createCacheNode() {\n      return {\n        s: UNTERMINATED,\n        // status, represents whether the cached computation returned a value or threw an error\n        v: undefined,\n        // value, either the cached result or an error, depending on s\n        o: null,\n        // object cache, a WeakMap where non-primitive arguments are stored\n        p: null // primitive cache, a regular Map where primitive arguments are stored.\n      };\n    }\n    function cache$1(fn) {\n      return function () {\n        var dispatcher = ReactCurrentCache.current;\n        if (!dispatcher) {\n          // If there is no dispatcher, then we treat this as not being cached.\n          // $FlowFixMe[incompatible-call]: We don't want to use rest arguments since we transpile the code.\n          return fn.apply(null, arguments);\n        }\n        var fnMap = dispatcher.getCacheForType(createCacheRoot);\n        var fnNode = fnMap.get(fn);\n        var cacheNode;\n        if (fnNode === undefined) {\n          cacheNode = createCacheNode();\n          fnMap.set(fn, cacheNode);\n        } else {\n          cacheNode = fnNode;\n        }\n        for (var i = 0, l = arguments.length; i < l; i++) {\n          var arg = arguments[i];\n          if (typeof arg === 'function' || typeof arg === 'object' && arg !== null) {\n            // Objects go into a WeakMap\n            var objectCache = cacheNode.o;\n            if (objectCache === null) {\n              cacheNode.o = objectCache = new WeakMap();\n            }\n            var objectNode = objectCache.get(arg);\n            if (objectNode === undefined) {\n              cacheNode = createCacheNode();\n              objectCache.set(arg, cacheNode);\n            } else {\n              cacheNode = objectNode;\n            }\n          } else {\n            // Primitives go into a regular Map\n            var primitiveCache = cacheNode.p;\n            if (primitiveCache === null) {\n              cacheNode.p = primitiveCache = new Map();\n            }\n            var primitiveNode = primitiveCache.get(arg);\n            if (primitiveNode === undefined) {\n              cacheNode = createCacheNode();\n              primitiveCache.set(arg, cacheNode);\n            } else {\n              cacheNode = primitiveNode;\n            }\n          }\n        }\n        if (cacheNode.s === TERMINATED) {\n          return cacheNode.v;\n        }\n        if (cacheNode.s === ERRORED) {\n          throw cacheNode.v;\n        }\n        try {\n          // $FlowFixMe[incompatible-call]: We don't want to use rest arguments since we transpile the code.\n          var result = fn.apply(null, arguments);\n          var terminatedNode = cacheNode;\n          terminatedNode.s = TERMINATED;\n          terminatedNode.v = result;\n          return result;\n        } catch (error) {\n          // We store the first error that's thrown and rethrow it.\n          var erroredNode = cacheNode;\n          erroredNode.s = ERRORED;\n          erroredNode.v = error;\n          throw error;\n        }\n      };\n    }\n    var cache = cache$1;\n    function resolveDispatcher() {\n      var dispatcher = ReactCurrentDispatcher$1.current;\n      {\n        if (dispatcher === null) {\n          error('Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for' + ' one of the following reasons:\\n' + '1. You might have mismatching versions of React and the renderer (such as React DOM)\\n' + '2. You might be breaking the Rules of Hooks\\n' + '3. You might have more than one copy of React in the same app\\n' + 'See https://react.dev/link/invalid-hook-call for tips about how to debug and fix this problem.');\n        }\n      } // Will result in a null access error if accessed outside render phase. We\n      // intentionally don't throw our own error because this is in a hot path.\n      // Also helps ensure this is inlined.\n\n      return dispatcher;\n    }\n    function useContext(Context) {\n      var dispatcher = resolveDispatcher();\n      {\n        if (Context.$$typeof === REACT_CONSUMER_TYPE) {\n          error('Calling useContext(Context.Consumer) is not supported and will cause bugs. ' + 'Did you mean to call useContext(Context) instead?');\n        }\n      }\n      return dispatcher.useContext(Context);\n    }\n    function useState(initialState) {\n      var dispatcher = resolveDispatcher();\n      return dispatcher.useState(initialState);\n    }\n    function useReducer(reducer, initialArg, init) {\n      var dispatcher = resolveDispatcher();\n      return dispatcher.useReducer(reducer, initialArg, init);\n    }\n    function useRef(initialValue) {\n      var dispatcher = resolveDispatcher();\n      return dispatcher.useRef(initialValue);\n    }\n    function useEffect(create, deps) {\n      var dispatcher = resolveDispatcher();\n      return dispatcher.useEffect(create, deps);\n    }\n    function useInsertionEffect(create, deps) {\n      var dispatcher = resolveDispatcher();\n      return dispatcher.useInsertionEffect(create, deps);\n    }\n    function useLayoutEffect(create, deps) {\n      var dispatcher = resolveDispatcher();\n      return dispatcher.useLayoutEffect(create, deps);\n    }\n    function useCallback(callback, deps) {\n      var dispatcher = resolveDispatcher();\n      return dispatcher.useCallback(callback, deps);\n    }\n    function useMemo(create, deps) {\n      var dispatcher = resolveDispatcher();\n      return dispatcher.useMemo(create, deps);\n    }\n    function useImperativeHandle(ref, create, deps) {\n      var dispatcher = resolveDispatcher();\n      return dispatcher.useImperativeHandle(ref, create, deps);\n    }\n    function useDebugValue(value, formatterFn) {\n      {\n        var dispatcher = resolveDispatcher();\n        return dispatcher.useDebugValue(value, formatterFn);\n      }\n    }\n    function useTransition() {\n      var dispatcher = resolveDispatcher();\n      return dispatcher.useTransition();\n    }\n    function useDeferredValue(value, initialValue) {\n      var dispatcher = resolveDispatcher();\n      return dispatcher.useDeferredValue(value, initialValue);\n    }\n    function useId() {\n      var dispatcher = resolveDispatcher();\n      return dispatcher.useId();\n    }\n    function useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {\n      var dispatcher = resolveDispatcher();\n      return dispatcher.useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);\n    }\n    function useCacheRefresh() {\n      var dispatcher = resolveDispatcher(); // $FlowFixMe[not-a-function] This is unstable, thus optional\n\n      return dispatcher.useCacheRefresh();\n    }\n    function use(usable) {\n      var dispatcher = resolveDispatcher();\n      return dispatcher.use(usable);\n    }\n    function useOptimistic(passthrough, reducer) {\n      var dispatcher = resolveDispatcher(); // $FlowFixMe[not-a-function] This is unstable, thus optional\n\n      return dispatcher.useOptimistic(passthrough, reducer);\n    }\n    function startTransition(scope, options) {\n      var prevTransition = ReactCurrentBatchConfig.transition; // Each renderer registers a callback to receive the return value of\n      // the scope function. This is used to implement async actions.\n\n      var callbacks = new Set();\n      var transition = {\n        _callbacks: callbacks\n      };\n      ReactCurrentBatchConfig.transition = transition;\n      var currentTransition = ReactCurrentBatchConfig.transition;\n      {\n        ReactCurrentBatchConfig.transition._updatedFibers = new Set();\n      }\n      {\n        try {\n          var returnValue = scope();\n          if (typeof returnValue === 'object' && returnValue !== null && typeof returnValue.then === 'function') {\n            callbacks.forEach(function (callback) {\n              return callback(currentTransition, returnValue);\n            });\n            returnValue.then(noop, onError);\n          }\n        } catch (error) {\n          onError(error);\n        } finally {\n          warnAboutTransitionSubscriptions(prevTransition, currentTransition);\n          ReactCurrentBatchConfig.transition = prevTransition;\n        }\n      }\n    }\n    function warnAboutTransitionSubscriptions(prevTransition, currentTransition) {\n      {\n        if (prevTransition === null && currentTransition._updatedFibers) {\n          var updatedFibersCount = currentTransition._updatedFibers.size;\n          currentTransition._updatedFibers.clear();\n          if (updatedFibersCount > 10) {\n            warn('Detected a large number of updates inside startTransition. ' + 'If this is due to a subscription please re-write it to use React provided hooks. ' + 'Otherwise concurrent mode guarantees are off the table.');\n          }\n        }\n      }\n    }\n    function noop() {} // Use reportError, if it exists. Otherwise console.error. This is the same as\n    // the default for onRecoverableError.\n\n    var onError = typeof reportError === 'function' ?\n    // In modern browsers, reportError will dispatch an error event,\n    // emulating an uncaught JavaScript error.\n    reportError : function (error) {\n      // In older browsers and test environments, fallback to console.error.\n      // eslint-disable-next-line react-internal/no-production-logging\n      console['error'](error);\n    };\n    var didWarnAboutMessageChannel = false;\n    var enqueueTaskImpl = null;\n    function enqueueTask(task) {\n      if (enqueueTaskImpl === null) {\n        try {\n          // read require off the module object to get around the bundlers.\n          // we don't want them to detect a require and bundle a Node polyfill.\n          var requireString = ('require' + Math.random()).slice(0, 7);\n          var nodeRequire = module && module[requireString]; // assuming we're in node, let's try to get node's\n          // version of setImmediate, bypassing fake timers if any.\n\n          enqueueTaskImpl = nodeRequire.call(module, 'timers').setImmediate;\n        } catch (_err) {\n          // we're in a browser\n          // we can't use regular timers because they may still be faked\n          // so we try MessageChannel+postMessage instead\n          enqueueTaskImpl = function (callback) {\n            {\n              if (didWarnAboutMessageChannel === false) {\n                didWarnAboutMessageChannel = true;\n                if (typeof MessageChannel === 'undefined') {\n                  error('This browser does not have a MessageChannel implementation, ' + 'so enqueuing tasks via await act(async () => ...) will fail. ' + 'Please file an issue at https://github.com/facebook/react/issues ' + 'if you encounter this warning.');\n                }\n              }\n            }\n            var channel = new MessageChannel();\n            channel.port1.onmessage = callback;\n            channel.port2.postMessage(undefined);\n          };\n        }\n      }\n      return enqueueTaskImpl(task);\n    }\n\n    // number of `act` scopes on the stack.\n\n    var actScopeDepth = 0; // We only warn the first time you neglect to await an async `act` scope.\n\n    var didWarnNoAwaitAct = false;\n    function act(callback) {\n      {\n        // When ReactCurrentActQueue.current is not null, it signals to React that\n        // we're currently inside an `act` scope. React will push all its tasks to\n        // this queue instead of scheduling them with platform APIs.\n        //\n        // We set this to an empty array when we first enter an `act` scope, and\n        // only unset it once we've left the outermost `act` scope — remember that\n        // `act` calls can be nested.\n        //\n        // If we're already inside an `act` scope, reuse the existing queue.\n        var prevIsBatchingLegacy = ReactCurrentActQueue.isBatchingLegacy;\n        var prevActQueue = ReactCurrentActQueue.current;\n        var prevActScopeDepth = actScopeDepth;\n        actScopeDepth++;\n        var queue = ReactCurrentActQueue.current = prevActQueue !== null ? prevActQueue : []; // Used to reproduce behavior of `batchedUpdates` in legacy mode. Only\n        // set to `true` while the given callback is executed, not for updates\n        // triggered during an async event, because this is how the legacy\n        // implementation of `act` behaved.\n\n        ReactCurrentActQueue.isBatchingLegacy = true;\n        var result; // This tracks whether the `act` call is awaited. In certain cases, not\n        // awaiting it is a mistake, so we will detect that and warn.\n\n        var didAwaitActCall = false;\n        try {\n          // Reset this to `false` right before entering the React work loop. The\n          // only place we ever read this fields is just below, right after running\n          // the callback. So we don't need to reset after the callback runs.\n          ReactCurrentActQueue.didScheduleLegacyUpdate = false;\n          result = callback();\n          var didScheduleLegacyUpdate = ReactCurrentActQueue.didScheduleLegacyUpdate; // Replicate behavior of original `act` implementation in legacy mode,\n          // which flushed updates immediately after the scope function exits, even\n          // if it's an async function.\n\n          if (!prevIsBatchingLegacy && didScheduleLegacyUpdate) {\n            flushActQueue(queue);\n          } // `isBatchingLegacy` gets reset using the regular stack, not the async\n          // one used to track `act` scopes. Why, you may be wondering? Because\n          // that's how it worked before version 18. Yes, it's confusing! We should\n          // delete legacy mode!!\n\n          ReactCurrentActQueue.isBatchingLegacy = prevIsBatchingLegacy;\n        } catch (error) {\n          // `isBatchingLegacy` gets reset using the regular stack, not the async\n          // one used to track `act` scopes. Why, you may be wondering? Because\n          // that's how it worked before version 18. Yes, it's confusing! We should\n          // delete legacy mode!!\n          ReactCurrentActQueue.isBatchingLegacy = prevIsBatchingLegacy;\n          popActScope(prevActQueue, prevActScopeDepth);\n          throw error;\n        }\n        if (result !== null && typeof result === 'object' &&\n        // $FlowFixMe[method-unbinding]\n        typeof result.then === 'function') {\n          // A promise/thenable was returned from the callback. Wait for it to\n          // resolve before flushing the queue.\n          //\n          // If `act` were implemented as an async function, this whole block could\n          // be a single `await` call. That's really the only difference between\n          // this branch and the next one.\n          var thenable = result; // Warn if the an `act` call with an async scope is not awaited. In a\n          // future release, consider making this an error.\n\n          queueSeveralMicrotasks(function () {\n            if (!didAwaitActCall && !didWarnNoAwaitAct) {\n              didWarnNoAwaitAct = true;\n              error('You called act(async () => ...) without await. ' + 'This could lead to unexpected testing behaviour, ' + 'interleaving multiple act calls and mixing their ' + 'scopes. ' + 'You should - await act(async () => ...);');\n            }\n          });\n          return {\n            then: function (resolve, reject) {\n              didAwaitActCall = true;\n              thenable.then(function (returnValue) {\n                popActScope(prevActQueue, prevActScopeDepth);\n                if (prevActScopeDepth === 0) {\n                  // We're exiting the outermost `act` scope. Flush the queue.\n                  try {\n                    flushActQueue(queue);\n                    enqueueTask(function () {\n                      return (\n                        // Recursively flush tasks scheduled by a microtask.\n                        recursivelyFlushAsyncActWork(returnValue, resolve, reject)\n                      );\n                    });\n                  } catch (error) {\n                    // `thenable` might not be a real promise, and `flushActQueue`\n                    // might throw, so we need to wrap `flushActQueue` in a\n                    // try/catch.\n                    reject(error);\n                  }\n                } else {\n                  resolve(returnValue);\n                }\n              }, function (error) {\n                popActScope(prevActQueue, prevActScopeDepth);\n                reject(error);\n              });\n            }\n          };\n        } else {\n          var returnValue = result; // The callback is not an async function. Exit the current\n          // scope immediately.\n\n          popActScope(prevActQueue, prevActScopeDepth);\n          if (prevActScopeDepth === 0) {\n            // We're exiting the outermost `act` scope. Flush the queue.\n            flushActQueue(queue); // If the queue is not empty, it implies that we intentionally yielded\n            // to the main thread, because something suspended. We will continue\n            // in an asynchronous task.\n            //\n            // Warn if something suspends but the `act` call is not awaited.\n            // In a future release, consider making this an error.\n\n            if (queue.length !== 0) {\n              queueSeveralMicrotasks(function () {\n                if (!didAwaitActCall && !didWarnNoAwaitAct) {\n                  didWarnNoAwaitAct = true;\n                  error('A component suspended inside an `act` scope, but the ' + '`act` call was not awaited. When testing React ' + 'components that depend on asynchronous data, you must ' + 'await the result:\\n\\n' + 'await act(() => ...)');\n                }\n              });\n            } // Like many things in this module, this is next part is confusing.\n            //\n            // We do not currently require every `act` call that is passed a\n            // callback to be awaited, through arguably we should. Since this\n            // callback was synchronous, we need to exit the current scope before\n            // returning.\n            //\n            // However, if thenable we're about to return *is* awaited, we'll\n            // immediately restore the current scope. So it shouldn't observable.\n            //\n            // This doesn't affect the case where the scope callback is async,\n            // because we always require those calls to be awaited.\n            //\n            // TODO: In a future version, consider always requiring all `act` calls\n            // to be awaited, regardless of whether the callback is sync or async.\n\n            ReactCurrentActQueue.current = null;\n          }\n          return {\n            then: function (resolve, reject) {\n              didAwaitActCall = true;\n              if (prevActScopeDepth === 0) {\n                // If the `act` call is awaited, restore the queue we were\n                // using before (see long comment above) so we can flush it.\n                ReactCurrentActQueue.current = queue;\n                enqueueTask(function () {\n                  return (\n                    // Recursively flush tasks scheduled by a microtask.\n                    recursivelyFlushAsyncActWork(returnValue, resolve, reject)\n                  );\n                });\n              } else {\n                resolve(returnValue);\n              }\n            }\n          };\n        }\n      }\n    }\n    function popActScope(prevActQueue, prevActScopeDepth) {\n      {\n        if (prevActScopeDepth !== actScopeDepth - 1) {\n          error('You seem to have overlapping act() calls, this is not supported. ' + 'Be sure to await previous act() calls before making a new one. ');\n        }\n        actScopeDepth = prevActScopeDepth;\n      }\n    }\n    function recursivelyFlushAsyncActWork(returnValue, resolve, reject) {\n      {\n        // Check if any tasks were scheduled asynchronously.\n        var queue = ReactCurrentActQueue.current;\n        if (queue !== null) {\n          if (queue.length !== 0) {\n            // Async tasks were scheduled, mostly likely in a microtask.\n            // Keep flushing until there are no more.\n            try {\n              flushActQueue(queue); // The work we just performed may have schedule additional async\n              // tasks. Wait a macrotask and check again.\n\n              enqueueTask(function () {\n                return recursivelyFlushAsyncActWork(returnValue, resolve, reject);\n              });\n            } catch (error) {\n              // Leave remaining tasks on the queue if something throws.\n              reject(error);\n            }\n          } else {\n            // The queue is empty. We can finish.\n            ReactCurrentActQueue.current = null;\n            resolve(returnValue);\n          }\n        } else {\n          resolve(returnValue);\n        }\n      }\n    }\n    var isFlushing = false;\n    function flushActQueue(queue) {\n      {\n        if (!isFlushing) {\n          // Prevent re-entrance.\n          isFlushing = true;\n          var i = 0;\n          try {\n            for (; i < queue.length; i++) {\n              var callback = queue[i];\n              do {\n                ReactCurrentActQueue.didUsePromise = false;\n                var continuation = callback(false);\n                if (continuation !== null) {\n                  if (ReactCurrentActQueue.didUsePromise) {\n                    // The component just suspended. Yield to the main thread in\n                    // case the promise is already resolved. If so, it will ping in\n                    // a microtask and we can resume without unwinding the stack.\n                    queue[i] = callback;\n                    queue.splice(0, i);\n                    return;\n                  }\n                  callback = continuation;\n                } else {\n                  break;\n                }\n              } while (true);\n            } // We flushed the entire queue.\n\n            queue.length = 0;\n          } catch (error) {\n            // If something throws, leave the remaining callbacks on the queue.\n            queue.splice(0, i + 1);\n            throw error;\n          } finally {\n            isFlushing = false;\n          }\n        }\n      }\n    } // Some of our warnings attempt to detect if the `act` call is awaited by\n    // checking in an asynchronous task. Wait a few microtasks before checking. The\n    // only reason one isn't sufficient is we want to accommodate the case where an\n    // `act` call is returned from an async function without first being awaited,\n    // since that's a somewhat common pattern. If you do this too many times in a\n    // nested sequence, you might get a warning, but you can always fix by awaiting\n    // the call.\n    //\n    // A macrotask would also work (and is the fallback) but depending on the test\n    // environment it may cause the warning to fire too late.\n\n    var queueSeveralMicrotasks = typeof queueMicrotask === 'function' ? function (callback) {\n      queueMicrotask(function () {\n        return queueMicrotask(callback);\n      });\n    } : enqueueTask;\n    var Children = {\n      map: mapChildren,\n      forEach: forEachChildren,\n      count: countChildren,\n      toArray: toArray,\n      only: onlyChild\n    };\n    exports.Children = Children;\n    exports.Component = Component;\n    exports.Fragment = REACT_FRAGMENT_TYPE;\n    exports.Profiler = REACT_PROFILER_TYPE;\n    exports.PureComponent = PureComponent;\n    exports.StrictMode = REACT_STRICT_MODE_TYPE;\n    exports.Suspense = REACT_SUSPENSE_TYPE;\n    exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = ReactSharedInternals;\n    exports.act = act;\n    exports.cache = cache;\n    exports.cloneElement = cloneElement;\n    exports.createContext = createContext;\n    exports.createElement = createElement;\n    exports.createFactory = createFactory;\n    exports.createRef = createRef;\n    exports.forwardRef = forwardRef;\n    exports.isValidElement = isValidElement;\n    exports.lazy = lazy;\n    exports.memo = memo;\n    exports.startTransition = startTransition;\n    exports.unstable_useCacheRefresh = useCacheRefresh;\n    exports.use = use;\n    exports.useCallback = useCallback;\n    exports.useContext = useContext;\n    exports.useDebugValue = useDebugValue;\n    exports.useDeferredValue = useDeferredValue;\n    exports.useEffect = useEffect;\n    exports.useId = useId;\n    exports.useImperativeHandle = useImperativeHandle;\n    exports.useInsertionEffect = useInsertionEffect;\n    exports.useLayoutEffect = useLayoutEffect;\n    exports.useMemo = useMemo;\n    exports.useOptimistic = useOptimistic;\n    exports.useReducer = useReducer;\n    exports.useRef = useRef;\n    exports.useState = useState;\n    exports.useSyncExternalStore = useSyncExternalStore;\n    exports.useTransition = useTransition;\n    exports.version = ReactVersion;\n    /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n    if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop === 'function') {\n      __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());\n    }\n  })();\n}","map":{"version":3,"names":["process","env","NODE_ENV","__REACT_DEVTOOLS_GLOBAL_HOOK__","registerInternalModuleStart","Error","ReactVersion","REACT_ELEMENT_TYPE","Symbol","for","REACT_PORTAL_TYPE","REACT_FRAGMENT_TYPE","REACT_STRICT_MODE_TYPE","REACT_PROFILER_TYPE","REACT_PROVIDER_TYPE","REACT_CONSUMER_TYPE","REACT_CONTEXT_TYPE","REACT_FORWARD_REF_TYPE","REACT_SUSPENSE_TYPE","REACT_SUSPENSE_LIST_TYPE","REACT_MEMO_TYPE","REACT_LAZY_TYPE","REACT_OFFSCREEN_TYPE","REACT_CACHE_TYPE","MAYBE_ITERATOR_SYMBOL","iterator","FAUX_ITERATOR_SYMBOL","getIteratorFn","maybeIterable","maybeIterator","ReactCurrentDispatcher$1","current","ReactCurrentCache","ReactCurrentBatchConfig","transition","ReactCurrentActQueue","isBatchingLegacy","didScheduleLegacyUpdate","didUsePromise","ReactCurrentOwner$1","ReactDebugCurrentFrame$1","currentExtraStackFrame","setExtraStackFrame","stack","getCurrentStack","getStackAddendum","impl","ReactSharedInternals","ReactCurrentDispatcher","ReactCurrentOwner","ReactDebugCurrentFrame","warn","format","_len","arguments","length","args","Array","_key","printWarning","error","_len2","_key2","level","concat","argsWithFormat","map","item","String","unshift","Function","prototype","apply","call","console","didWarnStateUpdateForUnmountedComponent","warnNoop","publicInstance","callerName","_constructor","constructor","componentName","displayName","name","warningKey","ReactNoopUpdateQueue","isMounted","enqueueForceUpdate","callback","enqueueReplaceState","completeState","enqueueSetState","partialState","assign","Object","emptyObject","freeze","Component","props","context","updater","refs","isReactComponent","setState","forceUpdate","deprecatedAPIs","replaceState","defineDeprecationWarning","methodName","info","defineProperty","get","undefined","fnName","hasOwnProperty","ComponentDummy","PureComponent","pureComponentPrototype","isPureReactComponent","createRef","refObject","seal","isArrayImpl","isArray","a","enableScopeAPI","enableCacheElement","enableTransitionTracing","enableLegacyHidden","enableRenderableContext","__NEXT_MAJOR__","enableRefAsProp","enableDebugTracing","typeName","value","hasToStringTag","toStringTag","type","willCoercionThrow","testStringCoercion","e","checkKeyStringCoercion","getWrappedName","outerType","innerType","wrapperName","functionName","getContextName","REACT_CLIENT_REFERENCE$2","getComponentNameFromType","$$typeof","tag","provider","_context","render","outerName","lazyComponent","payload","_payload","init","_init","x","REACT_CLIENT_REFERENCE$1","isValidElementType","getModuleId","disabledDepth","prevLog","prevInfo","prevWarn","prevError","prevGroup","prevGroupCollapsed","prevGroupEnd","disabledLog","__reactDisabledLog","disableLogs","log","group","groupCollapsed","groupEnd","configurable","enumerable","writable","defineProperties","reenableLogs","prefix","describeBuiltInComponentFrame","ownerFn","match","trim","reentry","componentFrameCache","PossiblyWeakMap","WeakMap","Map","describeNativeComponentFrame","fn","construct","frame","previousPrepareStackTrace","prepareStackTrace","previousDispatcher","RunInRootFrame","DetermineComponentFrameRoot","control","Fake","set","Reflect","maybePromise","catch","sample","namePropDescriptor","getOwnPropertyDescriptor","_RunInRootFrame$Deter","sampleStack","controlStack","sampleLines","split","controlLines","s","c","includes","_frame","replace","syntheticFrame","describeFunctionComponentFrame","shouldConstruct","describeUnknownElementTypeFrameInDEV","REACT_CLIENT_REFERENCE","specialPropKeyWarningShown","specialPropRefWarningShown","didWarnAboutStringRefs","hasValidRef","config","getter","isReactWarning","ref","hasValidKey","key","warnIfStringRefCannotBeAutoConverted","self","stateNode","defineKeyPropWarningGetter","warnAboutAccessingKey","defineRefPropWarningGetter","warnAboutAccessingRef","ReactElement","_ref","source","owner","element","_owner","_store","createElement","children","keys","typeString","i","validateChildKeys","propName","__self","childrenLength","childArray","_i","defaultProps","validateFragmentProps","didWarnAboutDeprecatedCreateFactory","createFactory","factory","bind","cloneAndReplaceKey","oldElement","newKey","cloneElement","clonedElement","_i2","getDeclarationErrorAddendum","node","parentType","child","isValidElement","validateExplicitKey","validated","iteratorFn","entries","step","next","done","object","ownerHasKeyUseWarning","currentComponentErrorInfo","getCurrentComponentErrorInfo","childOwner","setCurrentlyValidatingElement","parentName","fragment","SEPARATOR","SUBSEPARATOR","escape","escapeRegex","escaperLookup","escapedString","didWarnAboutMaps","userProvidedKeyEscapeRegex","escapeUserProvidedKey","text","getElementKey","index","toString","noop$1","resolveThenable","thenable","status","fulfilledValue","rejectedError","reason","then","pendingThenable","fulfilledThenable","rejectedThenable","_rejectedError","mapIntoArray","array","escapedPrefix","nameSoFar","invokeCallback","_child","mappedChild","childKey","escapedChildKey","push","nextName","subtreeCount","nextNamePrefix","iterableChildren","ii","childrenString","join","mapChildren","func","result","count","countChildren","n","forEachChildren","forEachFunc","forEachContext","toArray","onlyChild","createContext","defaultValue","_currentValue","_currentValue2","_threadCount","Provider","Consumer","_Provider","_currentRenderer","_currentRenderer2","Uninitialized","Pending","Resolved","Rejected","lazyInitializer","_status","ctor","_result","moduleObject","resolved","rejected","pending","default","lazy","lazyType","propTypes","newDefaultProps","newPropTypes","forwardRef","elementType","ownName","memo","compare","UNTERMINATED","TERMINATED","ERRORED","createCacheRoot","createCacheNode","v","o","p","cache$1","dispatcher","fnMap","getCacheForType","fnNode","cacheNode","l","arg","objectCache","objectNode","primitiveCache","primitiveNode","terminatedNode","erroredNode","cache","resolveDispatcher","useContext","Context","useState","initialState","useReducer","reducer","initialArg","useRef","initialValue","useEffect","create","deps","useInsertionEffect","useLayoutEffect","useCallback","useMemo","useImperativeHandle","useDebugValue","formatterFn","useTransition","useDeferredValue","useId","useSyncExternalStore","subscribe","getSnapshot","getServerSnapshot","useCacheRefresh","use","usable","useOptimistic","passthrough","startTransition","scope","options","prevTransition","callbacks","Set","_callbacks","currentTransition","_updatedFibers","returnValue","forEach","noop","onError","warnAboutTransitionSubscriptions","updatedFibersCount","size","clear","reportError","didWarnAboutMessageChannel","enqueueTaskImpl","enqueueTask","task","requireString","Math","random","slice","nodeRequire","module","setImmediate","_err","MessageChannel","channel","port1","onmessage","port2","postMessage","actScopeDepth","didWarnNoAwaitAct","act","prevIsBatchingLegacy","prevActQueue","prevActScopeDepth","queue","didAwaitActCall","flushActQueue","popActScope","queueSeveralMicrotasks","resolve","reject","recursivelyFlushAsyncActWork","isFlushing","continuation","splice","queueMicrotask","Children","only","exports","Fragment","Profiler","StrictMode","Suspense","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","unstable_useCacheRefresh","version","registerInternalModuleStop"],"sources":["/Users/geonil/.yarn/berry/cache/react-npm-18.3.0-canary-56e20051c-20240311-0b5ad2465a-10c0.zip/node_modules/react/cjs/react.development.js"],"sourcesContent":["/**\n * @license React\n * react.development.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function() {\n\n          'use strict';\n\n/* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\nif (\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart ===\n    'function'\n) {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());\n}\n          var ReactVersion = '18.3.0-canary-56e20051c-20240311';\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n// The Symbol used to tag the ReactElement-like types.\nvar REACT_ELEMENT_TYPE = Symbol.for('react.element');\nvar REACT_PORTAL_TYPE = Symbol.for('react.portal');\nvar REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\nvar REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\nvar REACT_PROFILER_TYPE = Symbol.for('react.profiler');\nvar REACT_PROVIDER_TYPE = Symbol.for('react.provider'); // TODO: Delete with enableRenderableContext\n\nvar REACT_CONSUMER_TYPE = Symbol.for('react.consumer');\nvar REACT_CONTEXT_TYPE = Symbol.for('react.context');\nvar REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\nvar REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\nvar REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\nvar REACT_MEMO_TYPE = Symbol.for('react.memo');\nvar REACT_LAZY_TYPE = Symbol.for('react.lazy');\nvar REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');\nvar REACT_CACHE_TYPE = Symbol.for('react.cache');\nvar MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\nfunction getIteratorFn(maybeIterable) {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n\n  return null;\n}\n\n/**\n * Keeps track of the current dispatcher.\n */\nvar ReactCurrentDispatcher$1 = {\n  current: null\n};\n\n/**\n * Keeps track of the current Cache dispatcher.\n */\nvar ReactCurrentCache = {\n  current: null\n};\n\n/**\n * Keeps track of the current batch's configuration such as how long an update\n * should suspend for if it needs to.\n */\nvar ReactCurrentBatchConfig = {\n  transition: null\n};\n\nvar ReactCurrentActQueue = {\n  current: null,\n  // Used to reproduce behavior of `batchedUpdates` in legacy mode.\n  isBatchingLegacy: false,\n  didScheduleLegacyUpdate: false,\n  // Tracks whether something called `use` during the current batch of work.\n  // Determines whether we should yield to microtasks to unwrap already resolved\n  // promises without suspending.\n  didUsePromise: false\n};\n\n/**\n * Keeps track of the current owner.\n *\n * The current owner is the component who should own any components that are\n * currently being constructed.\n */\nvar ReactCurrentOwner$1 = {\n  /**\n   * @internal\n   * @type {ReactComponent}\n   */\n  current: null\n};\n\nvar ReactDebugCurrentFrame$1 = {};\nvar currentExtraStackFrame = null;\n\n{\n  ReactDebugCurrentFrame$1.setExtraStackFrame = function (stack) {\n    {\n      currentExtraStackFrame = stack;\n    }\n  }; // Stack implementation injected by the current renderer.\n\n\n  ReactDebugCurrentFrame$1.getCurrentStack = null;\n\n  ReactDebugCurrentFrame$1.getStackAddendum = function () {\n    var stack = ''; // Add an extra top frame while an element is being validated\n\n    if (currentExtraStackFrame) {\n      stack += currentExtraStackFrame;\n    } // Delegate to the injected renderer-specific implementation\n\n\n    var impl = ReactDebugCurrentFrame$1.getCurrentStack;\n\n    if (impl) {\n      stack += impl() || '';\n    }\n\n    return stack;\n  };\n}\n\nvar ReactSharedInternals = {\n  ReactCurrentDispatcher: ReactCurrentDispatcher$1,\n  ReactCurrentCache: ReactCurrentCache,\n  ReactCurrentBatchConfig: ReactCurrentBatchConfig,\n  ReactCurrentOwner: ReactCurrentOwner$1\n};\n\n{\n  ReactSharedInternals.ReactDebugCurrentFrame = ReactDebugCurrentFrame$1;\n  ReactSharedInternals.ReactCurrentActQueue = ReactCurrentActQueue;\n}\n\n// by calls to these methods by a Babel plugin.\n//\n// In PROD (or in packages without access to React internals),\n// they are left as they are instead.\n\nfunction warn(format) {\n  {\n    {\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      printWarning('warn', format, args);\n    }\n  }\n}\nfunction error(format) {\n  {\n    {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      printWarning('error', format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    } // eslint-disable-next-line react-internal/safe-string-coercion\n\n\n    var argsWithFormat = args.map(function (item) {\n      return String(item);\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\nvar didWarnStateUpdateForUnmountedComponent = {};\n\nfunction warnNoop(publicInstance, callerName) {\n  {\n    var _constructor = publicInstance.constructor;\n    var componentName = _constructor && (_constructor.displayName || _constructor.name) || 'ReactClass';\n    var warningKey = componentName + \".\" + callerName;\n\n    if (didWarnStateUpdateForUnmountedComponent[warningKey]) {\n      return;\n    }\n\n    error(\"Can't call %s on a component that is not yet mounted. \" + 'This is a no-op, but it might indicate a bug in your application. ' + 'Instead, assign to `this.state` directly or define a `state = {};` ' + 'class property with the desired state in the %s component.', callerName, componentName);\n\n    didWarnStateUpdateForUnmountedComponent[warningKey] = true;\n  }\n}\n/**\n * This is the abstract API for an update queue.\n */\n\n\nvar ReactNoopUpdateQueue = {\n  /**\n   * Checks whether or not this composite component is mounted.\n   * @param {ReactClass} publicInstance The instance we want to test.\n   * @return {boolean} True if mounted, false otherwise.\n   * @protected\n   * @final\n   */\n  isMounted: function (publicInstance) {\n    return false;\n  },\n\n  /**\n   * Forces an update. This should only be invoked when it is known with\n   * certainty that we are **not** in a DOM transaction.\n   *\n   * You may want to call this when you know that some deeper aspect of the\n   * component's state has changed but `setState` was not called.\n   *\n   * This will not invoke `shouldComponentUpdate`, but it will invoke\n   * `componentWillUpdate` and `componentDidUpdate`.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {?function} callback Called after component is updated.\n   * @param {?string} callerName name of the calling function in the public API.\n   * @internal\n   */\n  enqueueForceUpdate: function (publicInstance, callback, callerName) {\n    warnNoop(publicInstance, 'forceUpdate');\n  },\n\n  /**\n   * Replaces all of the state. Always use this or `setState` to mutate state.\n   * You should treat `this.state` as immutable.\n   *\n   * There is no guarantee that `this.state` will be immediately updated, so\n   * accessing `this.state` after calling this method may return the old value.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} completeState Next state.\n   * @param {?function} callback Called after component is updated.\n   * @param {?string} callerName name of the calling function in the public API.\n   * @internal\n   */\n  enqueueReplaceState: function (publicInstance, completeState, callback, callerName) {\n    warnNoop(publicInstance, 'replaceState');\n  },\n\n  /**\n   * Sets a subset of the state. This only exists because _pendingState is\n   * internal. This provides a merging strategy that is not available to deep\n   * properties which is confusing. TODO: Expose pendingState or don't use it\n   * during the merge.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} partialState Next partial state to be merged with state.\n   * @param {?function} callback Called after component is updated.\n   * @param {?string} Name of the calling function in the public API.\n   * @internal\n   */\n  enqueueSetState: function (publicInstance, partialState, callback, callerName) {\n    warnNoop(publicInstance, 'setState');\n  }\n};\n\nvar assign = Object.assign;\n\nvar emptyObject = {};\n\n{\n  Object.freeze(emptyObject);\n}\n/**\n * Base class helpers for the updating state of a component.\n */\n\n\nfunction Component(props, context, updater) {\n  this.props = props;\n  this.context = context; // If a component has string refs, we will assign a different object later.\n\n  this.refs = emptyObject; // We initialize the default updater but the real one gets injected by the\n  // renderer.\n\n  this.updater = updater || ReactNoopUpdateQueue;\n}\n\nComponent.prototype.isReactComponent = {};\n/**\n * Sets a subset of the state. Always use this to mutate\n * state. You should treat `this.state` as immutable.\n *\n * There is no guarantee that `this.state` will be immediately updated, so\n * accessing `this.state` after calling this method may return the old value.\n *\n * There is no guarantee that calls to `setState` will run synchronously,\n * as they may eventually be batched together.  You can provide an optional\n * callback that will be executed when the call to setState is actually\n * completed.\n *\n * When a function is provided to setState, it will be called at some point in\n * the future (not synchronously). It will be called with the up to date\n * component arguments (state, props, context). These values can be different\n * from this.* because your function may be called after receiveProps but before\n * shouldComponentUpdate, and this new state, props, and context will not yet be\n * assigned to this.\n *\n * @param {object|function} partialState Next partial state or function to\n *        produce next partial state to be merged with current state.\n * @param {?function} callback Called after state is updated.\n * @final\n * @protected\n */\n\nComponent.prototype.setState = function (partialState, callback) {\n  if (typeof partialState !== 'object' && typeof partialState !== 'function' && partialState != null) {\n    throw new Error('takes an object of state variables to update or a ' + 'function which returns an object of state variables.');\n  }\n\n  this.updater.enqueueSetState(this, partialState, callback, 'setState');\n};\n/**\n * Forces an update. This should only be invoked when it is known with\n * certainty that we are **not** in a DOM transaction.\n *\n * You may want to call this when you know that some deeper aspect of the\n * component's state has changed but `setState` was not called.\n *\n * This will not invoke `shouldComponentUpdate`, but it will invoke\n * `componentWillUpdate` and `componentDidUpdate`.\n *\n * @param {?function} callback Called after update is complete.\n * @final\n * @protected\n */\n\n\nComponent.prototype.forceUpdate = function (callback) {\n  this.updater.enqueueForceUpdate(this, callback, 'forceUpdate');\n};\n/**\n * Deprecated APIs. These APIs used to exist on classic React classes but since\n * we would like to deprecate them, we're not going to move them over to this\n * modern base class. Instead, we define a getter that warns if it's accessed.\n */\n\n\n{\n  var deprecatedAPIs = {\n    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],\n    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']\n  };\n\n  var defineDeprecationWarning = function (methodName, info) {\n    Object.defineProperty(Component.prototype, methodName, {\n      get: function () {\n        warn('%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]);\n\n        return undefined;\n      }\n    });\n  };\n\n  for (var fnName in deprecatedAPIs) {\n    if (deprecatedAPIs.hasOwnProperty(fnName)) {\n      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);\n    }\n  }\n}\n\nfunction ComponentDummy() {}\n\nComponentDummy.prototype = Component.prototype;\n/**\n * Convenience component with default shallow equality check for sCU.\n */\n\nfunction PureComponent(props, context, updater) {\n  this.props = props;\n  this.context = context; // If a component has string refs, we will assign a different object later.\n\n  this.refs = emptyObject;\n  this.updater = updater || ReactNoopUpdateQueue;\n}\n\nvar pureComponentPrototype = PureComponent.prototype = new ComponentDummy();\npureComponentPrototype.constructor = PureComponent; // Avoid an extra prototype jump for these methods.\n\nassign(pureComponentPrototype, Component.prototype);\npureComponentPrototype.isPureReactComponent = true;\n\n// an immutable object with a single mutable value\nfunction createRef() {\n  var refObject = {\n    current: null\n  };\n\n  {\n    Object.seal(refObject);\n  }\n\n  return refObject;\n}\n\nvar isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\n\nfunction isArray(a) {\n  return isArrayImpl(a);\n}\n\n// -----------------------------------------------------------------------------\n\nvar enableScopeAPI = false; // Experimental Create Event Handle API.\nvar enableCacheElement = false;\nvar enableTransitionTracing = false; // No known bugs, but needs performance testing\n\nvar enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber\nvar enableRenderableContext = false;\n// Ready for next major.\n//\n// Alias __NEXT_MAJOR__ to false for easier skimming.\n// -----------------------------------------------------------------------------\n\nvar __NEXT_MAJOR__ = false; // Not ready to break experimental yet.\n// as a normal prop instead of stripping it from the props object.\n// Passes `ref` as a normal prop instead of stripping it from the props object\n// during element creation.\n\nvar enableRefAsProp = __NEXT_MAJOR__;\n// stuff. Intended to enable React core members to more easily debug scheduling\n// issues in DEV builds.\n\nvar enableDebugTracing = false;\n\n/*\n * The `'' + value` pattern (used in perf-sensitive code) throws for Symbol\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n *\n * The functions in this module will throw an easier-to-understand,\n * easier-to-debug exception with a clear errors message message explaining the\n * problem. (Instead of a confusing exception thrown inside the implementation\n * of the `value` object).\n */\n// $FlowFixMe[incompatible-return] only called in DEV, so void return is not possible.\nfunction typeName(value) {\n  {\n    // toStringTag is needed for namespaced types like Temporal.Instant\n    var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;\n    var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object'; // $FlowFixMe[incompatible-return]\n\n    return type;\n  }\n} // $FlowFixMe[incompatible-return] only called in DEV, so void return is not possible.\n\n\nfunction willCoercionThrow(value) {\n  {\n    try {\n      testStringCoercion(value);\n      return false;\n    } catch (e) {\n      return true;\n    }\n  }\n}\n\nfunction testStringCoercion(value) {\n  // If you ended up here by following an exception call stack, here's what's\n  // happened: you supplied an object or symbol value to React (as a prop, key,\n  // DOM attribute, CSS property, string ref, etc.) and when React tried to\n  // coerce it to a string using `'' + value`, an exception was thrown.\n  //\n  // The most common types that will cause this exception are `Symbol` instances\n  // and Temporal objects like `Temporal.Instant`. But any object that has a\n  // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n  // exception. (Library authors do this to prevent users from using built-in\n  // numeric operators like `+` or comparison operators like `>=` because custom\n  // methods are needed to perform accurate arithmetic or comparison.)\n  //\n  // To fix the problem, coerce this object or symbol value to a string before\n  // passing it to React. The most reliable way is usually `String(value)`.\n  //\n  // To find which value is throwing, check the browser or debugger console.\n  // Before this exception was thrown, there should be `console.error` output\n  // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n  // problem and how that type was used: key, atrribute, input value prop, etc.\n  // In most cases, this console output also shows the component and its\n  // ancestor components where the exception happened.\n  //\n  // eslint-disable-next-line react-internal/safe-string-coercion\n  return '' + value;\n}\nfunction checkKeyStringCoercion(value) {\n  {\n    if (willCoercionThrow(value)) {\n      error('The provided key is an unsupported type %s.' + ' This value must be coerced to a string before using it here.', typeName(value));\n\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\n\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  var displayName = outerType.displayName;\n\n  if (displayName) {\n    return displayName;\n  }\n\n  var functionName = innerType.displayName || innerType.name || '';\n  return functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\n} // Keep in sync with react-reconciler/getComponentNameFromFiber\n\n\nfunction getContextName(type) {\n  return type.displayName || 'Context';\n}\n\nvar REACT_CLIENT_REFERENCE$2 = Symbol.for('react.client.reference'); // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\n\nfunction getComponentNameFromType(type) {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n\n  if (typeof type === 'function') {\n    if (type.$$typeof === REACT_CLIENT_REFERENCE$2) {\n      // TODO: Create a convention for naming client references with debug info.\n      return null;\n    }\n\n    return type.displayName || type.name || null;\n  }\n\n  if (typeof type === 'string') {\n    return type;\n  }\n\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return 'Fragment';\n\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n\n    case REACT_PROFILER_TYPE:\n      return 'Profiler';\n\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n\n    case REACT_SUSPENSE_TYPE:\n      return 'Suspense';\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return 'SuspenseList';\n\n    case REACT_CACHE_TYPE:\n      {\n        return 'Cache';\n      }\n\n  }\n\n  if (typeof type === 'object') {\n    {\n      if (typeof type.tag === 'number') {\n        error('Received an unexpected object in getComponentNameFromType(). ' + 'This is likely a bug in React. Please file an issue.');\n      }\n    }\n\n    switch (type.$$typeof) {\n      case REACT_PROVIDER_TYPE:\n        {\n          var provider = type;\n          return getContextName(provider._context) + '.Provider';\n        }\n\n      case REACT_CONTEXT_TYPE:\n        var context = type;\n\n        {\n          return getContextName(context) + '.Consumer';\n        }\n\n      case REACT_CONSUMER_TYPE:\n        {\n          return null;\n        }\n\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n\n      case REACT_MEMO_TYPE:\n        var outerName = type.displayName || null;\n\n        if (outerName !== null) {\n          return outerName;\n        }\n\n        return getComponentNameFromType(type.type) || 'Memo';\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            return getComponentNameFromType(init(payload));\n          } catch (x) {\n            return null;\n          }\n        }\n    }\n  }\n\n  return null;\n}\n\n// $FlowFixMe[method-unbinding]\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar REACT_CLIENT_REFERENCE$1 = Symbol.for('react.client.reference');\nfunction isValidElementType(type) {\n  if (typeof type === 'string' || typeof type === 'function') {\n    return true;\n  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n\n\n  if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing  || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden  || type === REACT_OFFSCREEN_TYPE || enableScopeAPI  || enableCacheElement  || enableTransitionTracing ) {\n    return true;\n  }\n\n  if (typeof type === 'object' && type !== null) {\n    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || enableRenderableContext  || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object\n    // types supported by any Flight configuration anywhere since\n    // we don't know which Flight build this will end up being used\n    // with.\n    type.$$typeof === REACT_CLIENT_REFERENCE$1 || type.getModuleId !== undefined) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n// Helpers to patch console.logs to avoid logging during side-effect free\n// replaying on render function. This currently only patches the object\n// lazily which won't cover if the log function was extracted eagerly.\n// We could also eagerly patch the method.\nvar disabledDepth = 0;\nvar prevLog;\nvar prevInfo;\nvar prevWarn;\nvar prevError;\nvar prevGroup;\nvar prevGroupCollapsed;\nvar prevGroupEnd;\n\nfunction disabledLog() {}\n\ndisabledLog.__reactDisabledLog = true;\nfunction disableLogs() {\n  {\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      prevLog = console.log;\n      prevInfo = console.info;\n      prevWarn = console.warn;\n      prevError = console.error;\n      prevGroup = console.group;\n      prevGroupCollapsed = console.groupCollapsed;\n      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n\n      var props = {\n        configurable: true,\n        enumerable: true,\n        value: disabledLog,\n        writable: true\n      }; // $FlowFixMe[cannot-write] Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        info: props,\n        log: props,\n        warn: props,\n        error: props,\n        group: props,\n        groupCollapsed: props,\n        groupEnd: props\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    disabledDepth++;\n  }\n}\nfunction reenableLogs() {\n  {\n    disabledDepth--;\n\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      var props = {\n        configurable: true,\n        enumerable: true,\n        writable: true\n      }; // $FlowFixMe[cannot-write] Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        log: assign({}, props, {\n          value: prevLog\n        }),\n        info: assign({}, props, {\n          value: prevInfo\n        }),\n        warn: assign({}, props, {\n          value: prevWarn\n        }),\n        error: assign({}, props, {\n          value: prevError\n        }),\n        group: assign({}, props, {\n          value: prevGroup\n        }),\n        groupCollapsed: assign({}, props, {\n          value: prevGroupCollapsed\n        }),\n        groupEnd: assign({}, props, {\n          value: prevGroupEnd\n        })\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    if (disabledDepth < 0) {\n      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');\n    }\n  }\n}\n\nvar ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\nvar prefix;\nfunction describeBuiltInComponentFrame(name, ownerFn) {\n  {\n    if (prefix === undefined) {\n      // Extract the VM specific prefix used by each line.\n      try {\n        throw Error();\n      } catch (x) {\n        var match = x.stack.trim().match(/\\n( *(at )?)/);\n        prefix = match && match[1] || '';\n      }\n    } // We use the prefix to ensure our stacks line up with native stack frames.\n\n\n    return '\\n' + prefix + name;\n  }\n}\nvar reentry = false;\nvar componentFrameCache;\n\n{\n  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n  componentFrameCache = new PossiblyWeakMap();\n}\n/**\n * Leverages native browser/VM stack frames to get proper details (e.g.\n * filename, line + col number) for a single component in a component stack. We\n * do this by:\n *   (1) throwing and catching an error in the function - this will be our\n *       control error.\n *   (2) calling the component which will eventually throw an error that we'll\n *       catch - this will be our sample error.\n *   (3) diffing the control and sample error stacks to find the stack frame\n *       which represents our component.\n */\n\n\nfunction describeNativeComponentFrame(fn, construct) {\n  // If something asked for a stack inside a fake render, it should get ignored.\n  if (!fn || reentry) {\n    return '';\n  }\n\n  {\n    var frame = componentFrameCache.get(fn);\n\n    if (frame !== undefined) {\n      return frame;\n    }\n  }\n\n  reentry = true;\n  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe[incompatible-type] It does accept undefined.\n\n  Error.prepareStackTrace = undefined;\n  var previousDispatcher;\n\n  {\n    previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function\n    // for warnings.\n\n    ReactCurrentDispatcher.current = null;\n    disableLogs();\n  }\n  /**\n   * Finding a common stack frame between sample and control errors can be\n   * tricky given the different types and levels of stack trace truncation from\n   * different JS VMs. So instead we'll attempt to control what that common\n   * frame should be through this object method:\n   * Having both the sample and control errors be in the function under the\n   * `DescribeNativeComponentFrameRoot` property, + setting the `name` and\n   * `displayName` properties of the function ensures that a stack\n   * frame exists that has the method name `DescribeNativeComponentFrameRoot` in\n   * it for both control and sample stacks.\n   */\n\n\n  var RunInRootFrame = {\n    DetermineComponentFrameRoot: function () {\n      var control;\n\n      try {\n        // This should throw.\n        if (construct) {\n          // Something should be setting the props in the constructor.\n          var Fake = function () {\n            throw Error();\n          }; // $FlowFixMe[prop-missing]\n\n\n          Object.defineProperty(Fake.prototype, 'props', {\n            set: function () {\n              // We use a throwing setter instead of frozen or non-writable props\n              // because that won't throw in a non-strict mode function.\n              throw Error();\n            }\n          });\n\n          if (typeof Reflect === 'object' && Reflect.construct) {\n            // We construct a different control for this case to include any extra\n            // frames added by the construct call.\n            try {\n              Reflect.construct(Fake, []);\n            } catch (x) {\n              control = x;\n            }\n\n            Reflect.construct(fn, [], Fake);\n          } else {\n            try {\n              Fake.call();\n            } catch (x) {\n              control = x;\n            } // $FlowFixMe[prop-missing] found when upgrading Flow\n\n\n            fn.call(Fake.prototype);\n          }\n        } else {\n          try {\n            throw Error();\n          } catch (x) {\n            control = x;\n          } // TODO(luna): This will currently only throw if the function component\n          // tries to access React/ReactDOM/props. We should probably make this throw\n          // in simple components too\n\n\n          var maybePromise = fn(); // If the function component returns a promise, it's likely an async\n          // component, which we don't yet support. Attach a noop catch handler to\n          // silence the error.\n          // TODO: Implement component stacks for async client components?\n\n          if (maybePromise && typeof maybePromise.catch === 'function') {\n            maybePromise.catch(function () {});\n          }\n        }\n      } catch (sample) {\n        // This is inlined manually because closure doesn't do it for us.\n        if (sample && control && typeof sample.stack === 'string') {\n          return [sample.stack, control.stack];\n        }\n      }\n\n      return [null, null];\n    }\n  }; // $FlowFixMe[prop-missing]\n\n  RunInRootFrame.DetermineComponentFrameRoot.displayName = 'DetermineComponentFrameRoot';\n  var namePropDescriptor = Object.getOwnPropertyDescriptor(RunInRootFrame.DetermineComponentFrameRoot, 'name'); // Before ES6, the `name` property was not configurable.\n\n  if (namePropDescriptor && namePropDescriptor.configurable) {\n    // V8 utilizes a function's `name` property when generating a stack trace.\n    Object.defineProperty(RunInRootFrame.DetermineComponentFrameRoot, // Configurable properties can be updated even if its writable descriptor\n    // is set to `false`.\n    // $FlowFixMe[cannot-write]\n    'name', {\n      value: 'DetermineComponentFrameRoot'\n    });\n  }\n\n  try {\n    var _RunInRootFrame$Deter = RunInRootFrame.DetermineComponentFrameRoot(),\n        sampleStack = _RunInRootFrame$Deter[0],\n        controlStack = _RunInRootFrame$Deter[1];\n\n    if (sampleStack && controlStack) {\n      // This extracts the first frame from the sample that isn't also in the control.\n      // Skipping one frame that we assume is the frame that calls the two.\n      var sampleLines = sampleStack.split('\\n');\n      var controlLines = controlStack.split('\\n');\n      var s = 0;\n      var c = 0;\n\n      while (s < sampleLines.length && !sampleLines[s].includes('DetermineComponentFrameRoot')) {\n        s++;\n      }\n\n      while (c < controlLines.length && !controlLines[c].includes('DetermineComponentFrameRoot')) {\n        c++;\n      } // We couldn't find our intentionally injected common root frame, attempt\n      // to find another common root frame by search from the bottom of the\n      // control stack...\n\n\n      if (s === sampleLines.length || c === controlLines.length) {\n        s = sampleLines.length - 1;\n        c = controlLines.length - 1;\n\n        while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\n          // We expect at least one stack frame to be shared.\n          // Typically this will be the root most one. However, stack frames may be\n          // cut off due to maximum stack limits. In this case, one maybe cut off\n          // earlier than the other. We assume that the sample is longer or the same\n          // and there for cut off earlier. So we should find the root most frame in\n          // the sample somewhere in the control.\n          c--;\n        }\n      }\n\n      for (; s >= 1 && c >= 0; s--, c--) {\n        // Next we find the first one that isn't the same which should be the\n        // frame that called our sample function and the control.\n        if (sampleLines[s] !== controlLines[c]) {\n          // In V8, the first line is describing the message but other VMs don't.\n          // If we're about to return the first line, and the control is also on the same\n          // line, that's a pretty good indicator that our sample threw at same line as\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\n          // This can happen if you passed a class to function component, or non-function.\n          if (s !== 1 || c !== 1) {\n            do {\n              s--;\n              c--; // We may still have similar intermediate frames from the construct call.\n              // The next one that isn't the same should be our match though.\n\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                var _frame = '\\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled \"<anonymous>\"\n                // but we have a user-provided \"displayName\"\n                // splice it in to make the stack more readable.\n\n\n                if (fn.displayName && _frame.includes('<anonymous>')) {\n                  _frame = _frame.replace('<anonymous>', fn.displayName);\n                }\n\n                if (true) {\n                  if (typeof fn === 'function') {\n                    componentFrameCache.set(fn, _frame);\n                  }\n                } // Return the line we found.\n\n\n                return _frame;\n              }\n            } while (s >= 1 && c >= 0);\n          }\n\n          break;\n        }\n      }\n    }\n  } finally {\n    reentry = false;\n\n    {\n      ReactCurrentDispatcher.current = previousDispatcher;\n      reenableLogs();\n    }\n\n    Error.prepareStackTrace = previousPrepareStackTrace;\n  } // Fallback to just using the name if we couldn't make it throw.\n\n\n  var name = fn ? fn.displayName || fn.name : '';\n  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\n\n  {\n    if (typeof fn === 'function') {\n      componentFrameCache.set(fn, syntheticFrame);\n    }\n  }\n\n  return syntheticFrame;\n}\nfunction describeFunctionComponentFrame(fn, ownerFn) {\n  {\n    return describeNativeComponentFrame(fn, false);\n  }\n}\n\nfunction shouldConstruct(Component) {\n  var prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nfunction describeUnknownElementTypeFrameInDEV(type, ownerFn) {\n\n  if (type == null) {\n    return '';\n  }\n\n  if (typeof type === 'function') {\n    {\n      return describeNativeComponentFrame(type, shouldConstruct(type));\n    }\n  }\n\n  if (typeof type === 'string') {\n    return describeBuiltInComponentFrame(type);\n  }\n\n  switch (type) {\n    case REACT_SUSPENSE_TYPE:\n      return describeBuiltInComponentFrame('Suspense');\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return describeBuiltInComponentFrame('SuspenseList');\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        return describeFunctionComponentFrame(type.render);\n\n      case REACT_MEMO_TYPE:\n        // Memo may contain any component type so we recursively resolve it.\n        return describeUnknownElementTypeFrameInDEV(type.type, ownerFn);\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            // Lazy may contain any component type so we recursively resolve it.\n            return describeUnknownElementTypeFrameInDEV(init(payload), ownerFn);\n          } catch (x) {}\n        }\n    }\n  }\n\n  return '';\n}\n\nvar ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\nvar ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\nvar REACT_CLIENT_REFERENCE = Symbol.for('react.client.reference');\nvar specialPropKeyWarningShown;\nvar specialPropRefWarningShown;\nvar didWarnAboutStringRefs;\n\n{\n  didWarnAboutStringRefs = {};\n}\n\nfunction hasValidRef(config) {\n  {\n    if (hasOwnProperty.call(config, 'ref')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  {\n    if (hasOwnProperty.call(config, 'key')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.key !== undefined;\n}\n\nfunction warnIfStringRefCannotBeAutoConverted(config, self) {\n  {\n    if (typeof config.ref === 'string' && ReactCurrentOwner.current && self && ReactCurrentOwner.current.stateNode !== self) {\n      var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);\n\n      if (!didWarnAboutStringRefs[componentName]) {\n        error('Component \"%s\" contains the string ref \"%s\". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://react.dev/link/strict-mode-string-ref', getComponentNameFromType(ReactCurrentOwner.current.type), config.ref);\n\n        didWarnAboutStringRefs[componentName] = true;\n      }\n    }\n  }\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingKey = function () {\n      if (!specialPropKeyWarningShown) {\n        specialPropKeyWarningShown = true;\n\n        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://react.dev/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingKey.isReactWarning = true;\n    Object.defineProperty(props, 'key', {\n      get: warnAboutAccessingKey,\n      configurable: true\n    });\n  }\n}\n\nfunction defineRefPropWarningGetter(props, displayName) {\n  {\n    {\n      var warnAboutAccessingRef = function () {\n        if (!specialPropRefWarningShown) {\n          specialPropRefWarningShown = true;\n\n          error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://react.dev/link/special-props)', displayName);\n        }\n      };\n\n      warnAboutAccessingRef.isReactWarning = true;\n      Object.defineProperty(props, 'ref', {\n        get: warnAboutAccessingRef,\n        configurable: true\n      });\n    }\n  }\n}\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */\n\n\nfunction ReactElement(type, key, _ref, self, source, owner, props) {\n  var ref;\n\n  {\n    ref = _ref;\n  }\n\n  var element;\n\n  {\n    // In prod, `ref` is a regular property. It will be removed in a\n    // future release.\n    element = {\n      // This tag allows us to uniquely identify this as a React Element\n      $$typeof: REACT_ELEMENT_TYPE,\n      // Built-in properties that belong on the element\n      type: type,\n      key: key,\n      ref: ref,\n      props: props,\n      // Record the component responsible for creating this element.\n      _owner: owner\n    };\n  }\n\n  {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n\n    Object.defineProperty(element._store, 'validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: false\n    }); // debugInfo contains Server Component debug information.\n\n    Object.defineProperty(element, '_debugInfo', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: null\n    });\n\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n}\n/**\n * Create and return a new ReactElement of the given type.\n * See https://reactjs.org/docs/react-api.html#createelement\n */\n\nfunction createElement(type, config, children) {\n  {\n    if (!isValidElementType(type)) {\n      // This is an invalid element type.\n      //\n      // We warn in this case but don't throw. We expect the element creation to\n      // succeed and there will likely be errors in render.\n      var info = '';\n\n      if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n        info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\n      }\n\n      var typeString;\n\n      if (type === null) {\n        typeString = 'null';\n      } else if (isArray(type)) {\n        typeString = 'array';\n      } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n        typeString = \"<\" + (getComponentNameFromType(type.type) || 'Unknown') + \" />\";\n        info = ' Did you accidentally export a JSX literal instead of a component?';\n      } else {\n        typeString = typeof type;\n      }\n\n      error('React.createElement: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\n    } else {\n      // This is a valid element type.\n      // Skip key warning if the type isn't valid since our key validation logic\n      // doesn't expect a non-string/function type and can throw confusing\n      // errors. We don't want exception behavior to differ between dev and\n      // prod. (Rendering will throw with a helpful message and as soon as the\n      // type is fixed, the key warnings will appear.)\n      for (var i = 2; i < arguments.length; i++) {\n        validateChildKeys(arguments[i], type);\n      }\n    } // Unlike the jsx() runtime, createElement() doesn't warn about key spread.\n\n  }\n\n  var propName; // Reserved names are extracted\n\n  var props = {};\n  var key = null;\n  var ref = null;\n\n  if (config != null) {\n    if (hasValidRef(config)) {\n      {\n        ref = config.ref;\n      }\n\n      {\n        warnIfStringRefCannotBeAutoConverted(config, config.__self);\n      }\n    }\n\n    if (hasValidKey(config)) {\n      {\n        checkKeyStringCoercion(config.key);\n      }\n\n      key = '' + config.key;\n    } // Remaining properties are added to a new props object\n\n\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && // Skip over reserved prop names\n      propName !== 'key' && (propName !== 'ref') && // Even though we don't use these anymore in the runtime, we don't want\n      // them to appear as props, so in createElement we filter them out.\n      // We don't have to do this in the jsx() runtime because the jsx()\n      // transform never passed these as props; it used separate arguments.\n      propName !== '__self' && propName !== '__source') {\n        props[propName] = config[propName];\n      }\n    }\n  } // Children can be more than one argument, and those are transferred onto\n  // the newly allocated props object.\n\n\n  var childrenLength = arguments.length - 2;\n\n  if (childrenLength === 1) {\n    props.children = children;\n  } else if (childrenLength > 1) {\n    var childArray = Array(childrenLength);\n\n    for (var _i = 0; _i < childrenLength; _i++) {\n      childArray[_i] = arguments[_i + 2];\n    }\n\n    {\n      if (Object.freeze) {\n        Object.freeze(childArray);\n      }\n    }\n\n    props.children = childArray;\n  } // Resolve default props\n\n\n  if (type && type.defaultProps) {\n    var defaultProps = type.defaultProps;\n\n    for (propName in defaultProps) {\n      if (props[propName] === undefined) {\n        props[propName] = defaultProps[propName];\n      }\n    }\n  }\n\n  {\n    if (key || ref) {\n      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n\n      if (key) {\n        defineKeyPropWarningGetter(props, displayName);\n      }\n\n      if (ref) {\n        defineRefPropWarningGetter(props, displayName);\n      }\n    }\n  }\n\n  var element = ReactElement(type, key, ref, undefined, undefined, ReactCurrentOwner.current, props);\n\n  if (type === REACT_FRAGMENT_TYPE) {\n    validateFragmentProps(element);\n  }\n\n  return element;\n}\nvar didWarnAboutDeprecatedCreateFactory = false;\n/**\n * Return a function that produces ReactElements of a given type.\n * See https://reactjs.org/docs/react-api.html#createfactory\n */\n\nfunction createFactory(type) {\n  var factory = createElement.bind(null, type); // Expose the type on the factory and the prototype so that it can be\n  // easily accessed on elements. E.g. `<Foo />.type === Foo`.\n  // This should not be named `constructor` since this may not be the function\n  // that created the element, and it may not even be a constructor.\n  // Legacy hook: remove it\n\n  factory.type = type;\n\n  {\n    if (!didWarnAboutDeprecatedCreateFactory) {\n      didWarnAboutDeprecatedCreateFactory = true;\n\n      warn('React.createFactory() is deprecated and will be removed in ' + 'a future major release. Consider using JSX ' + 'or use React.createElement() directly instead.');\n    } // Legacy hook: remove it\n\n\n    Object.defineProperty(factory, 'type', {\n      enumerable: false,\n      get: function () {\n        warn('Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.');\n\n        Object.defineProperty(this, 'type', {\n          value: type\n        });\n        return type;\n      }\n    });\n  }\n\n  return factory;\n}\nfunction cloneAndReplaceKey(oldElement, newKey) {\n  return ReactElement(oldElement.type, newKey, // When enableRefAsProp is on, this argument is ignored. This check only\n  // exists to avoid the `ref` access warning.\n  oldElement.ref, undefined, undefined, oldElement._owner, oldElement.props);\n}\n/**\n * Clone and return a new ReactElement using element as the starting point.\n * See https://reactjs.org/docs/react-api.html#cloneelement\n */\n\nfunction cloneElement(element, config, children) {\n  if (element === null || element === undefined) {\n    throw new Error(\"The argument must be a React element, but you passed \" + element + \".\");\n  }\n\n  var propName; // Original props are copied\n\n  var props = assign({}, element.props); // Reserved names are extracted\n\n  var key = element.key;\n  var ref = element.ref; // Owner will be preserved, unless ref is overridden\n\n  var owner = element._owner;\n\n  if (config != null) {\n    if (hasValidRef(config)) {\n      {\n        // Silently steal the ref from the parent.\n        ref = config.ref;\n      }\n\n      owner = ReactCurrentOwner.current;\n    }\n\n    if (hasValidKey(config)) {\n      {\n        checkKeyStringCoercion(config.key);\n      }\n\n      key = '' + config.key;\n    } // Remaining properties override existing props\n\n\n    var defaultProps;\n\n    if (element.type && element.type.defaultProps) {\n      defaultProps = element.type.defaultProps;\n    }\n\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && // Skip over reserved prop names\n      propName !== 'key' && (propName !== 'ref') && // ...and maybe these, too, though we currently rely on them for\n      // warnings and debug information in dev. Need to decide if we're OK\n      // with dropping them. In the jsx() runtime it's not an issue because\n      // the data gets passed as separate arguments instead of props, but\n      // it would be nice to stop relying on them entirely so we can drop\n      // them from the internal Fiber field.\n      propName !== '__self' && propName !== '__source' && // Undefined `ref` is ignored by cloneElement. We treat it the same as\n      // if the property were missing. This is mostly for\n      // backwards compatibility.\n      !(enableRefAsProp  )) {\n        if (config[propName] === undefined && defaultProps !== undefined) {\n          // Resolve default props\n          props[propName] = defaultProps[propName];\n        } else {\n          props[propName] = config[propName];\n        }\n      }\n    }\n  } // Children can be more than one argument, and those are transferred onto\n  // the newly allocated props object.\n\n\n  var childrenLength = arguments.length - 2;\n\n  if (childrenLength === 1) {\n    props.children = children;\n  } else if (childrenLength > 1) {\n    var childArray = Array(childrenLength);\n\n    for (var i = 0; i < childrenLength; i++) {\n      childArray[i] = arguments[i + 2];\n    }\n\n    props.children = childArray;\n  }\n\n  var clonedElement = ReactElement(element.type, key, ref, undefined, undefined, owner, props);\n\n  for (var _i2 = 2; _i2 < arguments.length; _i2++) {\n    validateChildKeys(arguments[_i2], clonedElement.type);\n  }\n\n  return clonedElement;\n}\n\nfunction getDeclarationErrorAddendum() {\n  {\n    if (ReactCurrentOwner.current) {\n      var name = getComponentNameFromType(ReactCurrentOwner.current.type);\n\n      if (name) {\n        return '\\n\\nCheck the render method of `' + name + '`.';\n      }\n    }\n\n    return '';\n  }\n}\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\n\n\nfunction validateChildKeys(node, parentType) {\n  {\n    if (typeof node !== 'object' || !node) {\n      return;\n    }\n\n    if (node.$$typeof === REACT_CLIENT_REFERENCE) ; else if (isArray(node)) {\n      for (var i = 0; i < node.length; i++) {\n        var child = node[i];\n\n        if (isValidElement(child)) {\n          validateExplicitKey(child, parentType);\n        }\n      }\n    } else if (isValidElement(node)) {\n      // This element was passed in a valid location.\n      if (node._store) {\n        node._store.validated = true;\n      }\n    } else {\n      var iteratorFn = getIteratorFn(node);\n\n      if (typeof iteratorFn === 'function') {\n        // Entry iterators used to provide implicit keys,\n        // but now we print a separate warning for them later.\n        if (iteratorFn !== node.entries) {\n          var iterator = iteratorFn.call(node);\n          var step;\n\n          while (!(step = iterator.next()).done) {\n            if (isValidElement(step.value)) {\n              validateExplicitKey(step.value, parentType);\n            }\n          }\n        }\n      }\n    }\n  }\n}\n/**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */\n\n\nfunction isValidElement(object) {\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n}\nvar ownerHasKeyUseWarning = {};\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\n\nfunction validateExplicitKey(element, parentType) {\n  {\n    if (!element._store || element._store.validated || element.key != null) {\n      return;\n    }\n\n    element._store.validated = true;\n    var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n\n    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n      return;\n    }\n\n    ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n    // property, it may be the creator of the child that's responsible for\n    // assigning it a key.\n\n    var childOwner = '';\n\n    if (element && element._owner && element._owner !== ReactCurrentOwner.current) {\n      // Give the component that originally created this child.\n      childOwner = \" It was passed a child from \" + getComponentNameFromType(element._owner.type) + \".\";\n    }\n\n    setCurrentlyValidatingElement(element);\n\n    error('Each child in a list should have a unique \"key\" prop.' + '%s%s See https://react.dev/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);\n\n    setCurrentlyValidatingElement(null);\n  }\n}\n\nfunction setCurrentlyValidatingElement(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, owner ? owner.type : null);\n      ReactDebugCurrentFrame.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame.setExtraStackFrame(null);\n    }\n  }\n}\n\nfunction getCurrentComponentErrorInfo(parentType) {\n  {\n    var info = getDeclarationErrorAddendum();\n\n    if (!info) {\n      var parentName = getComponentNameFromType(parentType);\n\n      if (parentName) {\n        info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n      }\n    }\n\n    return info;\n  }\n}\n/**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */\n\n\nfunction validateFragmentProps(fragment) {\n  // TODO: Move this to render phase instead of at element creation.\n  {\n    var keys = Object.keys(fragment.props);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n\n      if (key !== 'children' && key !== 'key') {\n        setCurrentlyValidatingElement(fragment);\n\n        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\n\n        setCurrentlyValidatingElement(null);\n        break;\n      }\n    }\n\n    if (fragment.ref !== null) {\n      setCurrentlyValidatingElement(fragment);\n\n      error('Invalid attribute `ref` supplied to `React.Fragment`.');\n\n      setCurrentlyValidatingElement(null);\n    }\n  }\n}\n\nvar SEPARATOR = '.';\nvar SUBSEPARATOR = ':';\n/**\n * Escape and wrap key so it is safe to use as a reactid\n *\n * @param {string} key to be escaped.\n * @return {string} the escaped key.\n */\n\nfunction escape(key) {\n  var escapeRegex = /[=:]/g;\n  var escaperLookup = {\n    '=': '=0',\n    ':': '=2'\n  };\n  var escapedString = key.replace(escapeRegex, function (match) {\n    return escaperLookup[match];\n  });\n  return '$' + escapedString;\n}\n/**\n * TODO: Test that a single child and an array with one item have the same key\n * pattern.\n */\n\n\nvar didWarnAboutMaps = false;\nvar userProvidedKeyEscapeRegex = /\\/+/g;\n\nfunction escapeUserProvidedKey(text) {\n  return text.replace(userProvidedKeyEscapeRegex, '$&/');\n}\n/**\n * Generate a key string that identifies a element within a set.\n *\n * @param {*} element A element that could contain a manual key.\n * @param {number} index Index that is used if a manual key is not provided.\n * @return {string}\n */\n\n\nfunction getElementKey(element, index) {\n  // Do some typechecking here since we call this blindly. We want to ensure\n  // that we don't block potential future ES APIs.\n  if (typeof element === 'object' && element !== null && element.key != null) {\n    // Explicit key\n    {\n      checkKeyStringCoercion(element.key);\n    }\n\n    return escape('' + element.key);\n  } // Implicit key determined by the index in the set\n\n\n  return index.toString(36);\n}\n\nfunction noop$1() {}\n\nfunction resolveThenable(thenable) {\n  switch (thenable.status) {\n    case 'fulfilled':\n      {\n        var fulfilledValue = thenable.value;\n        return fulfilledValue;\n      }\n\n    case 'rejected':\n      {\n        var rejectedError = thenable.reason;\n        throw rejectedError;\n      }\n\n    default:\n      {\n        if (typeof thenable.status === 'string') {\n          // Only instrument the thenable if the status if not defined. If\n          // it's defined, but an unknown value, assume it's been instrumented by\n          // some custom userspace implementation. We treat it as \"pending\".\n          // Attach a dummy listener, to ensure that any lazy initialization can\n          // happen. Flight lazily parses JSON when the value is actually awaited.\n          thenable.then(noop$1, noop$1);\n        } else {\n          // This is an uncached thenable that we haven't seen before.\n          // TODO: Detect infinite ping loops caused by uncached promises.\n          var pendingThenable = thenable;\n          pendingThenable.status = 'pending';\n          pendingThenable.then(function (fulfilledValue) {\n            if (thenable.status === 'pending') {\n              var fulfilledThenable = thenable;\n              fulfilledThenable.status = 'fulfilled';\n              fulfilledThenable.value = fulfilledValue;\n            }\n          }, function (error) {\n            if (thenable.status === 'pending') {\n              var rejectedThenable = thenable;\n              rejectedThenable.status = 'rejected';\n              rejectedThenable.reason = error;\n            }\n          });\n        } // Check one more time in case the thenable resolved synchronously.\n\n\n        switch (thenable.status) {\n          case 'fulfilled':\n            {\n              var fulfilledThenable = thenable;\n              return fulfilledThenable.value;\n            }\n\n          case 'rejected':\n            {\n              var rejectedThenable = thenable;\n              var _rejectedError = rejectedThenable.reason;\n              throw _rejectedError;\n            }\n        }\n      }\n  }\n\n  throw thenable;\n}\n\nfunction mapIntoArray(children, array, escapedPrefix, nameSoFar, callback) {\n  var type = typeof children;\n\n  if (type === 'undefined' || type === 'boolean') {\n    // All of the above are perceived as null.\n    children = null;\n  }\n\n  var invokeCallback = false;\n\n  if (children === null) {\n    invokeCallback = true;\n  } else {\n    switch (type) {\n      case 'bigint':\n        {\n          break;\n        }\n\n      // fallthrough for enabled BigInt support\n\n      case 'string':\n      case 'number':\n        invokeCallback = true;\n        break;\n\n      case 'object':\n        switch (children.$$typeof) {\n          case REACT_ELEMENT_TYPE:\n          case REACT_PORTAL_TYPE:\n            invokeCallback = true;\n            break;\n\n          case REACT_LAZY_TYPE:\n            var payload = children._payload;\n            var init = children._init;\n            return mapIntoArray(init(payload), array, escapedPrefix, nameSoFar, callback);\n        }\n\n    }\n  }\n\n  if (invokeCallback) {\n    var _child = children;\n    var mappedChild = callback(_child); // If it's the only child, treat the name as if it was wrapped in an array\n    // so that it's consistent if the number of children grows:\n\n    var childKey = nameSoFar === '' ? SEPARATOR + getElementKey(_child, 0) : nameSoFar;\n\n    if (isArray(mappedChild)) {\n      var escapedChildKey = '';\n\n      if (childKey != null) {\n        escapedChildKey = escapeUserProvidedKey(childKey) + '/';\n      }\n\n      mapIntoArray(mappedChild, array, escapedChildKey, '', function (c) {\n        return c;\n      });\n    } else if (mappedChild != null) {\n      if (isValidElement(mappedChild)) {\n        {\n          // The `if` statement here prevents auto-disabling of the safe\n          // coercion ESLint rule, so we must manually disable it below.\n          // $FlowFixMe[incompatible-type] Flow incorrectly thinks React.Portal doesn't have a key\n          if (mappedChild.key && (!_child || _child.key !== mappedChild.key)) {\n            checkKeyStringCoercion(mappedChild.key);\n          }\n        }\n\n        mappedChild = cloneAndReplaceKey(mappedChild, // Keep both the (mapped) and old keys if they differ, just as\n        // traverseAllChildren used to do for objects as children\n        escapedPrefix + ( // $FlowFixMe[incompatible-type] Flow incorrectly thinks React.Portal doesn't have a key\n        mappedChild.key && (!_child || _child.key !== mappedChild.key) ? escapeUserProvidedKey( // $FlowFixMe[unsafe-addition]\n        '' + mappedChild.key // eslint-disable-line react-internal/safe-string-coercion\n        ) + '/' : '') + childKey);\n      }\n\n      array.push(mappedChild);\n    }\n\n    return 1;\n  }\n\n  var child;\n  var nextName;\n  var subtreeCount = 0; // Count of children found in the current subtree.\n\n  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;\n\n  if (isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      child = children[i];\n      nextName = nextNamePrefix + getElementKey(child, i);\n      subtreeCount += mapIntoArray(child, array, escapedPrefix, nextName, callback);\n    }\n  } else {\n    var iteratorFn = getIteratorFn(children);\n\n    if (typeof iteratorFn === 'function') {\n      var iterableChildren = children;\n\n      {\n        // Warn about using Maps as children\n        if (iteratorFn === iterableChildren.entries) {\n          if (!didWarnAboutMaps) {\n            warn('Using Maps as children is not supported. ' + 'Use an array of keyed ReactElements instead.');\n          }\n\n          didWarnAboutMaps = true;\n        }\n      }\n\n      var iterator = iteratorFn.call(iterableChildren);\n      var step;\n      var ii = 0; // $FlowFixMe[incompatible-use] `iteratorFn` might return null according to typing.\n\n      while (!(step = iterator.next()).done) {\n        child = step.value;\n        nextName = nextNamePrefix + getElementKey(child, ii++);\n        subtreeCount += mapIntoArray(child, array, escapedPrefix, nextName, callback);\n      }\n    } else if (type === 'object') {\n      if (typeof children.then === 'function') {\n        return mapIntoArray(resolveThenable(children), array, escapedPrefix, nameSoFar, callback);\n      } // eslint-disable-next-line react-internal/safe-string-coercion\n\n\n      var childrenString = String(children);\n      throw new Error(\"Objects are not valid as a React child (found: \" + (childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString) + \"). \" + 'If you meant to render a collection of children, use an array ' + 'instead.');\n    }\n  }\n\n  return subtreeCount;\n}\n/**\n * Maps children that are typically specified as `props.children`.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrenmap\n *\n * The provided mapFunction(child, index) will be called for each\n * leaf child.\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} func The map function.\n * @param {*} context Context for mapFunction.\n * @return {object} Object containing the ordered map of results.\n */\n\n\nfunction mapChildren(children, func, context) {\n  if (children == null) {\n    // $FlowFixMe limitation refining abstract types in Flow\n    return children;\n  }\n\n  var result = [];\n  var count = 0;\n  mapIntoArray(children, result, '', '', function (child) {\n    return func.call(context, child, count++);\n  });\n  return result;\n}\n/**\n * Count the number of children that are typically specified as\n * `props.children`.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrencount\n *\n * @param {?*} children Children tree container.\n * @return {number} The number of children.\n */\n\n\nfunction countChildren(children) {\n  var n = 0;\n  mapChildren(children, function () {\n    n++; // Don't return anything\n  });\n  return n;\n}\n/**\n * Iterates through children that are typically specified as `props.children`.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrenforeach\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child.\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} forEachFunc\n * @param {*} forEachContext Context for forEachContext.\n */\n\n\nfunction forEachChildren(children, forEachFunc, forEachContext) {\n  mapChildren(children, // $FlowFixMe[missing-this-annot]\n  function () {\n    forEachFunc.apply(this, arguments); // Don't return anything.\n  }, forEachContext);\n}\n/**\n * Flatten a children object (typically specified as `props.children`) and\n * return an array with appropriately re-keyed children.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrentoarray\n */\n\n\nfunction toArray(children) {\n  return mapChildren(children, function (child) {\n    return child;\n  }) || [];\n}\n/**\n * Returns the first child in a collection of children and verifies that there\n * is only one child in the collection.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrenonly\n *\n * The current implementation of this function assumes that a single child gets\n * passed without a wrapper, but the purpose of this helper function is to\n * abstract away the particular structure of children.\n *\n * @param {?object} children Child collection structure.\n * @return {ReactElement} The first and only `ReactElement` contained in the\n * structure.\n */\n\n\nfunction onlyChild(children) {\n  if (!isValidElement(children)) {\n    throw new Error('React.Children.only expected to receive a single React element child.');\n  }\n\n  return children;\n}\n\nfunction createContext(defaultValue) {\n  // TODO: Second argument used to be an optional `calculateChangedBits`\n  // function. Warn to reserve for future use?\n  var context = {\n    $$typeof: REACT_CONTEXT_TYPE,\n    // As a workaround to support multiple concurrent renderers, we categorize\n    // some renderers as primary and others as secondary. We only expect\n    // there to be two concurrent renderers at most: React Native (primary) and\n    // Fabric (secondary); React DOM (primary) and React ART (secondary).\n    // Secondary renderers store their context values on separate fields.\n    _currentValue: defaultValue,\n    _currentValue2: defaultValue,\n    // Used to track how many concurrent renderers this context currently\n    // supports within in a single renderer. Such as parallel server rendering.\n    _threadCount: 0,\n    // These are circular\n    Provider: null,\n    Consumer: null\n  };\n\n  {\n    context.Provider = {\n      $$typeof: REACT_PROVIDER_TYPE,\n      _context: context\n    };\n\n    {\n      var Consumer = {\n        $$typeof: REACT_CONTEXT_TYPE,\n        _context: context\n      };\n      Object.defineProperties(Consumer, {\n        Provider: {\n          get: function () {\n            return context.Provider;\n          },\n          set: function (_Provider) {\n            context.Provider = _Provider;\n          }\n        },\n        _currentValue: {\n          get: function () {\n            return context._currentValue;\n          },\n          set: function (_currentValue) {\n            context._currentValue = _currentValue;\n          }\n        },\n        _currentValue2: {\n          get: function () {\n            return context._currentValue2;\n          },\n          set: function (_currentValue2) {\n            context._currentValue2 = _currentValue2;\n          }\n        },\n        _threadCount: {\n          get: function () {\n            return context._threadCount;\n          },\n          set: function (_threadCount) {\n            context._threadCount = _threadCount;\n          }\n        },\n        Consumer: {\n          get: function () {\n            return context.Consumer;\n          }\n        },\n        displayName: {\n          get: function () {\n            return context.displayName;\n          },\n          set: function (displayName) {}\n        }\n      });\n      context.Consumer = Consumer;\n    }\n  }\n\n  {\n    context._currentRenderer = null;\n    context._currentRenderer2 = null;\n  }\n\n  return context;\n}\n\nvar Uninitialized = -1;\nvar Pending = 0;\nvar Resolved = 1;\nvar Rejected = 2;\n\nfunction lazyInitializer(payload) {\n  if (payload._status === Uninitialized) {\n    var ctor = payload._result;\n    var thenable = ctor(); // Transition to the next state.\n    // This might throw either because it's missing or throws. If so, we treat it\n    // as still uninitialized and try again next time. Which is the same as what\n    // happens if the ctor or any wrappers processing the ctor throws. This might\n    // end up fixing it if the resolution was a concurrency bug.\n\n    thenable.then(function (moduleObject) {\n      if (payload._status === Pending || payload._status === Uninitialized) {\n        // Transition to the next state.\n        var resolved = payload;\n        resolved._status = Resolved;\n        resolved._result = moduleObject;\n      }\n    }, function (error) {\n      if (payload._status === Pending || payload._status === Uninitialized) {\n        // Transition to the next state.\n        var rejected = payload;\n        rejected._status = Rejected;\n        rejected._result = error;\n      }\n    });\n\n    if (payload._status === Uninitialized) {\n      // In case, we're still uninitialized, then we're waiting for the thenable\n      // to resolve. Set it as pending in the meantime.\n      var pending = payload;\n      pending._status = Pending;\n      pending._result = thenable;\n    }\n  }\n\n  if (payload._status === Resolved) {\n    var moduleObject = payload._result;\n\n    {\n      if (moduleObject === undefined) {\n        error('lazy: Expected the result of a dynamic imp' + 'ort() call. ' + 'Instead received: %s\\n\\nYour code should look like: \\n  ' + // Break up imports to avoid accidentally parsing them as dependencies.\n        'const MyComponent = lazy(() => imp' + \"ort('./MyComponent'))\\n\\n\" + 'Did you accidentally put curly braces around the import?', moduleObject);\n      }\n    }\n\n    {\n      if (!('default' in moduleObject)) {\n        error('lazy: Expected the result of a dynamic imp' + 'ort() call. ' + 'Instead received: %s\\n\\nYour code should look like: \\n  ' + // Break up imports to avoid accidentally parsing them as dependencies.\n        'const MyComponent = lazy(() => imp' + \"ort('./MyComponent'))\", moduleObject);\n      }\n    }\n\n    return moduleObject.default;\n  } else {\n    throw payload._result;\n  }\n}\n\nfunction lazy(ctor) {\n  var payload = {\n    // We use these fields to store the result.\n    _status: Uninitialized,\n    _result: ctor\n  };\n  var lazyType = {\n    $$typeof: REACT_LAZY_TYPE,\n    _payload: payload,\n    _init: lazyInitializer\n  };\n\n  {\n    // In production, this would just set it on the object.\n    var defaultProps;\n    var propTypes; // $FlowFixMe[prop-missing]\n\n    Object.defineProperties(lazyType, {\n      defaultProps: {\n        configurable: true,\n        get: function () {\n          return defaultProps;\n        },\n        // $FlowFixMe[missing-local-annot]\n        set: function (newDefaultProps) {\n          error('It is not supported to assign `defaultProps` to ' + 'a lazy component import. Either specify them where the component ' + 'is defined, or create a wrapping component around it.');\n\n          defaultProps = newDefaultProps; // Match production behavior more closely:\n          // $FlowFixMe[prop-missing]\n\n          Object.defineProperty(lazyType, 'defaultProps', {\n            enumerable: true\n          });\n        }\n      },\n      propTypes: {\n        configurable: true,\n        get: function () {\n          return propTypes;\n        },\n        // $FlowFixMe[missing-local-annot]\n        set: function (newPropTypes) {\n          error('It is not supported to assign `propTypes` to ' + 'a lazy component import. Either specify them where the component ' + 'is defined, or create a wrapping component around it.');\n\n          propTypes = newPropTypes; // Match production behavior more closely:\n          // $FlowFixMe[prop-missing]\n\n          Object.defineProperty(lazyType, 'propTypes', {\n            enumerable: true\n          });\n        }\n      }\n    });\n  }\n\n  return lazyType;\n}\n\nfunction forwardRef(render) {\n  {\n    if (render != null && render.$$typeof === REACT_MEMO_TYPE) {\n      error('forwardRef requires a render function but received a `memo` ' + 'component. Instead of forwardRef(memo(...)), use ' + 'memo(forwardRef(...)).');\n    } else if (typeof render !== 'function') {\n      error('forwardRef requires a render function but was given %s.', render === null ? 'null' : typeof render);\n    } else {\n      if (render.length !== 0 && render.length !== 2) {\n        error('forwardRef render functions accept exactly two parameters: props and ref. %s', render.length === 1 ? 'Did you forget to use the ref parameter?' : 'Any additional parameter will be undefined.');\n      }\n    }\n\n    if (render != null) {\n      if (render.defaultProps != null) {\n        error('forwardRef render functions do not support defaultProps. ' + 'Did you accidentally pass a React component?');\n      }\n    }\n  }\n\n  var elementType = {\n    $$typeof: REACT_FORWARD_REF_TYPE,\n    render: render\n  };\n\n  {\n    var ownName;\n    Object.defineProperty(elementType, 'displayName', {\n      enumerable: false,\n      configurable: true,\n      get: function () {\n        return ownName;\n      },\n      set: function (name) {\n        ownName = name; // The inner component shouldn't inherit this display name in most cases,\n        // because the component may be used elsewhere.\n        // But it's nice for anonymous functions to inherit the name,\n        // so that our component-stack generation logic will display their frames.\n        // An anonymous function generally suggests a pattern like:\n        //   React.forwardRef((props, ref) => {...});\n        // This kind of inner function is not used elsewhere so the side effect is okay.\n\n        if (!render.name && !render.displayName) {\n          render.displayName = name;\n        }\n      }\n    });\n  }\n\n  return elementType;\n}\n\nfunction memo(type, compare) {\n  {\n    if (!isValidElementType(type)) {\n      error('memo: The first argument must be a component. Instead ' + 'received: %s', type === null ? 'null' : typeof type);\n    }\n  }\n\n  var elementType = {\n    $$typeof: REACT_MEMO_TYPE,\n    type: type,\n    compare: compare === undefined ? null : compare\n  };\n\n  {\n    var ownName;\n    Object.defineProperty(elementType, 'displayName', {\n      enumerable: false,\n      configurable: true,\n      get: function () {\n        return ownName;\n      },\n      set: function (name) {\n        ownName = name; // The inner component shouldn't inherit this display name in most cases,\n        // because the component may be used elsewhere.\n        // But it's nice for anonymous functions to inherit the name,\n        // so that our component-stack generation logic will display their frames.\n        // An anonymous function generally suggests a pattern like:\n        //   React.memo((props) => {...});\n        // This kind of inner function is not used elsewhere so the side effect is okay.\n\n        if (!type.name && !type.displayName) {\n          type.displayName = name;\n        }\n      }\n    });\n  }\n\n  return elementType;\n}\n\nvar UNTERMINATED = 0;\nvar TERMINATED = 1;\nvar ERRORED = 2;\n\nfunction createCacheRoot() {\n  return new WeakMap();\n}\n\nfunction createCacheNode() {\n  return {\n    s: UNTERMINATED,\n    // status, represents whether the cached computation returned a value or threw an error\n    v: undefined,\n    // value, either the cached result or an error, depending on s\n    o: null,\n    // object cache, a WeakMap where non-primitive arguments are stored\n    p: null // primitive cache, a regular Map where primitive arguments are stored.\n\n  };\n}\n\nfunction cache$1(fn) {\n  return function () {\n    var dispatcher = ReactCurrentCache.current;\n\n    if (!dispatcher) {\n      // If there is no dispatcher, then we treat this as not being cached.\n      // $FlowFixMe[incompatible-call]: We don't want to use rest arguments since we transpile the code.\n      return fn.apply(null, arguments);\n    }\n\n    var fnMap = dispatcher.getCacheForType(createCacheRoot);\n    var fnNode = fnMap.get(fn);\n    var cacheNode;\n\n    if (fnNode === undefined) {\n      cacheNode = createCacheNode();\n      fnMap.set(fn, cacheNode);\n    } else {\n      cacheNode = fnNode;\n    }\n\n    for (var i = 0, l = arguments.length; i < l; i++) {\n      var arg = arguments[i];\n\n      if (typeof arg === 'function' || typeof arg === 'object' && arg !== null) {\n        // Objects go into a WeakMap\n        var objectCache = cacheNode.o;\n\n        if (objectCache === null) {\n          cacheNode.o = objectCache = new WeakMap();\n        }\n\n        var objectNode = objectCache.get(arg);\n\n        if (objectNode === undefined) {\n          cacheNode = createCacheNode();\n          objectCache.set(arg, cacheNode);\n        } else {\n          cacheNode = objectNode;\n        }\n      } else {\n        // Primitives go into a regular Map\n        var primitiveCache = cacheNode.p;\n\n        if (primitiveCache === null) {\n          cacheNode.p = primitiveCache = new Map();\n        }\n\n        var primitiveNode = primitiveCache.get(arg);\n\n        if (primitiveNode === undefined) {\n          cacheNode = createCacheNode();\n          primitiveCache.set(arg, cacheNode);\n        } else {\n          cacheNode = primitiveNode;\n        }\n      }\n    }\n\n    if (cacheNode.s === TERMINATED) {\n      return cacheNode.v;\n    }\n\n    if (cacheNode.s === ERRORED) {\n      throw cacheNode.v;\n    }\n\n    try {\n      // $FlowFixMe[incompatible-call]: We don't want to use rest arguments since we transpile the code.\n      var result = fn.apply(null, arguments);\n      var terminatedNode = cacheNode;\n      terminatedNode.s = TERMINATED;\n      terminatedNode.v = result;\n      return result;\n    } catch (error) {\n      // We store the first error that's thrown and rethrow it.\n      var erroredNode = cacheNode;\n      erroredNode.s = ERRORED;\n      erroredNode.v = error;\n      throw error;\n    }\n  };\n}\n\nvar cache = cache$1;\n\nfunction resolveDispatcher() {\n  var dispatcher = ReactCurrentDispatcher$1.current;\n\n  {\n    if (dispatcher === null) {\n      error('Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for' + ' one of the following reasons:\\n' + '1. You might have mismatching versions of React and the renderer (such as React DOM)\\n' + '2. You might be breaking the Rules of Hooks\\n' + '3. You might have more than one copy of React in the same app\\n' + 'See https://react.dev/link/invalid-hook-call for tips about how to debug and fix this problem.');\n    }\n  } // Will result in a null access error if accessed outside render phase. We\n  // intentionally don't throw our own error because this is in a hot path.\n  // Also helps ensure this is inlined.\n\n\n  return dispatcher;\n}\nfunction useContext(Context) {\n  var dispatcher = resolveDispatcher();\n\n  {\n    if (Context.$$typeof === REACT_CONSUMER_TYPE) {\n      error('Calling useContext(Context.Consumer) is not supported and will cause bugs. ' + 'Did you mean to call useContext(Context) instead?');\n    }\n  }\n\n  return dispatcher.useContext(Context);\n}\nfunction useState(initialState) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useState(initialState);\n}\nfunction useReducer(reducer, initialArg, init) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useReducer(reducer, initialArg, init);\n}\nfunction useRef(initialValue) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useRef(initialValue);\n}\nfunction useEffect(create, deps) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useEffect(create, deps);\n}\nfunction useInsertionEffect(create, deps) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useInsertionEffect(create, deps);\n}\nfunction useLayoutEffect(create, deps) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useLayoutEffect(create, deps);\n}\nfunction useCallback(callback, deps) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useCallback(callback, deps);\n}\nfunction useMemo(create, deps) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useMemo(create, deps);\n}\nfunction useImperativeHandle(ref, create, deps) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useImperativeHandle(ref, create, deps);\n}\nfunction useDebugValue(value, formatterFn) {\n  {\n    var dispatcher = resolveDispatcher();\n    return dispatcher.useDebugValue(value, formatterFn);\n  }\n}\nfunction useTransition() {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useTransition();\n}\nfunction useDeferredValue(value, initialValue) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useDeferredValue(value, initialValue);\n}\nfunction useId() {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useId();\n}\nfunction useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);\n}\nfunction useCacheRefresh() {\n  var dispatcher = resolveDispatcher(); // $FlowFixMe[not-a-function] This is unstable, thus optional\n\n  return dispatcher.useCacheRefresh();\n}\nfunction use(usable) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.use(usable);\n}\nfunction useOptimistic(passthrough, reducer) {\n  var dispatcher = resolveDispatcher(); // $FlowFixMe[not-a-function] This is unstable, thus optional\n\n  return dispatcher.useOptimistic(passthrough, reducer);\n}\n\nfunction startTransition(scope, options) {\n  var prevTransition = ReactCurrentBatchConfig.transition; // Each renderer registers a callback to receive the return value of\n  // the scope function. This is used to implement async actions.\n\n  var callbacks = new Set();\n  var transition = {\n    _callbacks: callbacks\n  };\n  ReactCurrentBatchConfig.transition = transition;\n  var currentTransition = ReactCurrentBatchConfig.transition;\n\n  {\n    ReactCurrentBatchConfig.transition._updatedFibers = new Set();\n  }\n\n  {\n    try {\n      var returnValue = scope();\n\n      if (typeof returnValue === 'object' && returnValue !== null && typeof returnValue.then === 'function') {\n        callbacks.forEach(function (callback) {\n          return callback(currentTransition, returnValue);\n        });\n        returnValue.then(noop, onError);\n      }\n    } catch (error) {\n      onError(error);\n    } finally {\n      warnAboutTransitionSubscriptions(prevTransition, currentTransition);\n      ReactCurrentBatchConfig.transition = prevTransition;\n    }\n  }\n}\n\nfunction warnAboutTransitionSubscriptions(prevTransition, currentTransition) {\n  {\n    if (prevTransition === null && currentTransition._updatedFibers) {\n      var updatedFibersCount = currentTransition._updatedFibers.size;\n\n      currentTransition._updatedFibers.clear();\n\n      if (updatedFibersCount > 10) {\n        warn('Detected a large number of updates inside startTransition. ' + 'If this is due to a subscription please re-write it to use React provided hooks. ' + 'Otherwise concurrent mode guarantees are off the table.');\n      }\n    }\n  }\n}\n\nfunction noop() {} // Use reportError, if it exists. Otherwise console.error. This is the same as\n// the default for onRecoverableError.\n\n\nvar onError = typeof reportError === 'function' ? // In modern browsers, reportError will dispatch an error event,\n// emulating an uncaught JavaScript error.\nreportError : function (error) {\n  // In older browsers and test environments, fallback to console.error.\n  // eslint-disable-next-line react-internal/no-production-logging\n  console['error'](error);\n};\n\nvar didWarnAboutMessageChannel = false;\nvar enqueueTaskImpl = null;\nfunction enqueueTask(task) {\n  if (enqueueTaskImpl === null) {\n    try {\n      // read require off the module object to get around the bundlers.\n      // we don't want them to detect a require and bundle a Node polyfill.\n      var requireString = ('require' + Math.random()).slice(0, 7);\n      var nodeRequire = module && module[requireString]; // assuming we're in node, let's try to get node's\n      // version of setImmediate, bypassing fake timers if any.\n\n      enqueueTaskImpl = nodeRequire.call(module, 'timers').setImmediate;\n    } catch (_err) {\n      // we're in a browser\n      // we can't use regular timers because they may still be faked\n      // so we try MessageChannel+postMessage instead\n      enqueueTaskImpl = function (callback) {\n        {\n          if (didWarnAboutMessageChannel === false) {\n            didWarnAboutMessageChannel = true;\n\n            if (typeof MessageChannel === 'undefined') {\n              error('This browser does not have a MessageChannel implementation, ' + 'so enqueuing tasks via await act(async () => ...) will fail. ' + 'Please file an issue at https://github.com/facebook/react/issues ' + 'if you encounter this warning.');\n            }\n          }\n        }\n\n        var channel = new MessageChannel();\n        channel.port1.onmessage = callback;\n        channel.port2.postMessage(undefined);\n      };\n    }\n  }\n\n  return enqueueTaskImpl(task);\n}\n\n// number of `act` scopes on the stack.\n\nvar actScopeDepth = 0; // We only warn the first time you neglect to await an async `act` scope.\n\nvar didWarnNoAwaitAct = false;\nfunction act(callback) {\n  {\n    // When ReactCurrentActQueue.current is not null, it signals to React that\n    // we're currently inside an `act` scope. React will push all its tasks to\n    // this queue instead of scheduling them with platform APIs.\n    //\n    // We set this to an empty array when we first enter an `act` scope, and\n    // only unset it once we've left the outermost `act` scope — remember that\n    // `act` calls can be nested.\n    //\n    // If we're already inside an `act` scope, reuse the existing queue.\n    var prevIsBatchingLegacy = ReactCurrentActQueue.isBatchingLegacy;\n    var prevActQueue = ReactCurrentActQueue.current;\n    var prevActScopeDepth = actScopeDepth;\n    actScopeDepth++;\n    var queue = ReactCurrentActQueue.current = prevActQueue !== null ? prevActQueue : []; // Used to reproduce behavior of `batchedUpdates` in legacy mode. Only\n    // set to `true` while the given callback is executed, not for updates\n    // triggered during an async event, because this is how the legacy\n    // implementation of `act` behaved.\n\n    ReactCurrentActQueue.isBatchingLegacy = true;\n    var result; // This tracks whether the `act` call is awaited. In certain cases, not\n    // awaiting it is a mistake, so we will detect that and warn.\n\n    var didAwaitActCall = false;\n\n    try {\n      // Reset this to `false` right before entering the React work loop. The\n      // only place we ever read this fields is just below, right after running\n      // the callback. So we don't need to reset after the callback runs.\n      ReactCurrentActQueue.didScheduleLegacyUpdate = false;\n      result = callback();\n      var didScheduleLegacyUpdate = ReactCurrentActQueue.didScheduleLegacyUpdate; // Replicate behavior of original `act` implementation in legacy mode,\n      // which flushed updates immediately after the scope function exits, even\n      // if it's an async function.\n\n      if (!prevIsBatchingLegacy && didScheduleLegacyUpdate) {\n        flushActQueue(queue);\n      } // `isBatchingLegacy` gets reset using the regular stack, not the async\n      // one used to track `act` scopes. Why, you may be wondering? Because\n      // that's how it worked before version 18. Yes, it's confusing! We should\n      // delete legacy mode!!\n\n\n      ReactCurrentActQueue.isBatchingLegacy = prevIsBatchingLegacy;\n    } catch (error) {\n      // `isBatchingLegacy` gets reset using the regular stack, not the async\n      // one used to track `act` scopes. Why, you may be wondering? Because\n      // that's how it worked before version 18. Yes, it's confusing! We should\n      // delete legacy mode!!\n      ReactCurrentActQueue.isBatchingLegacy = prevIsBatchingLegacy;\n      popActScope(prevActQueue, prevActScopeDepth);\n      throw error;\n    }\n\n    if (result !== null && typeof result === 'object' && // $FlowFixMe[method-unbinding]\n    typeof result.then === 'function') {\n      // A promise/thenable was returned from the callback. Wait for it to\n      // resolve before flushing the queue.\n      //\n      // If `act` were implemented as an async function, this whole block could\n      // be a single `await` call. That's really the only difference between\n      // this branch and the next one.\n      var thenable = result; // Warn if the an `act` call with an async scope is not awaited. In a\n      // future release, consider making this an error.\n\n      queueSeveralMicrotasks(function () {\n        if (!didAwaitActCall && !didWarnNoAwaitAct) {\n          didWarnNoAwaitAct = true;\n\n          error('You called act(async () => ...) without await. ' + 'This could lead to unexpected testing behaviour, ' + 'interleaving multiple act calls and mixing their ' + 'scopes. ' + 'You should - await act(async () => ...);');\n        }\n      });\n      return {\n        then: function (resolve, reject) {\n          didAwaitActCall = true;\n          thenable.then(function (returnValue) {\n            popActScope(prevActQueue, prevActScopeDepth);\n\n            if (prevActScopeDepth === 0) {\n              // We're exiting the outermost `act` scope. Flush the queue.\n              try {\n                flushActQueue(queue);\n                enqueueTask(function () {\n                  return (// Recursively flush tasks scheduled by a microtask.\n                    recursivelyFlushAsyncActWork(returnValue, resolve, reject)\n                  );\n                });\n              } catch (error) {\n                // `thenable` might not be a real promise, and `flushActQueue`\n                // might throw, so we need to wrap `flushActQueue` in a\n                // try/catch.\n                reject(error);\n              }\n            } else {\n              resolve(returnValue);\n            }\n          }, function (error) {\n            popActScope(prevActQueue, prevActScopeDepth);\n            reject(error);\n          });\n        }\n      };\n    } else {\n      var returnValue = result; // The callback is not an async function. Exit the current\n      // scope immediately.\n\n      popActScope(prevActQueue, prevActScopeDepth);\n\n      if (prevActScopeDepth === 0) {\n        // We're exiting the outermost `act` scope. Flush the queue.\n        flushActQueue(queue); // If the queue is not empty, it implies that we intentionally yielded\n        // to the main thread, because something suspended. We will continue\n        // in an asynchronous task.\n        //\n        // Warn if something suspends but the `act` call is not awaited.\n        // In a future release, consider making this an error.\n\n        if (queue.length !== 0) {\n          queueSeveralMicrotasks(function () {\n            if (!didAwaitActCall && !didWarnNoAwaitAct) {\n              didWarnNoAwaitAct = true;\n\n              error('A component suspended inside an `act` scope, but the ' + '`act` call was not awaited. When testing React ' + 'components that depend on asynchronous data, you must ' + 'await the result:\\n\\n' + 'await act(() => ...)');\n            }\n          });\n        } // Like many things in this module, this is next part is confusing.\n        //\n        // We do not currently require every `act` call that is passed a\n        // callback to be awaited, through arguably we should. Since this\n        // callback was synchronous, we need to exit the current scope before\n        // returning.\n        //\n        // However, if thenable we're about to return *is* awaited, we'll\n        // immediately restore the current scope. So it shouldn't observable.\n        //\n        // This doesn't affect the case where the scope callback is async,\n        // because we always require those calls to be awaited.\n        //\n        // TODO: In a future version, consider always requiring all `act` calls\n        // to be awaited, regardless of whether the callback is sync or async.\n\n\n        ReactCurrentActQueue.current = null;\n      }\n\n      return {\n        then: function (resolve, reject) {\n          didAwaitActCall = true;\n\n          if (prevActScopeDepth === 0) {\n            // If the `act` call is awaited, restore the queue we were\n            // using before (see long comment above) so we can flush it.\n            ReactCurrentActQueue.current = queue;\n            enqueueTask(function () {\n              return (// Recursively flush tasks scheduled by a microtask.\n                recursivelyFlushAsyncActWork(returnValue, resolve, reject)\n              );\n            });\n          } else {\n            resolve(returnValue);\n          }\n        }\n      };\n    }\n  }\n}\n\nfunction popActScope(prevActQueue, prevActScopeDepth) {\n  {\n    if (prevActScopeDepth !== actScopeDepth - 1) {\n      error('You seem to have overlapping act() calls, this is not supported. ' + 'Be sure to await previous act() calls before making a new one. ');\n    }\n\n    actScopeDepth = prevActScopeDepth;\n  }\n}\n\nfunction recursivelyFlushAsyncActWork(returnValue, resolve, reject) {\n  {\n    // Check if any tasks were scheduled asynchronously.\n    var queue = ReactCurrentActQueue.current;\n\n    if (queue !== null) {\n      if (queue.length !== 0) {\n        // Async tasks were scheduled, mostly likely in a microtask.\n        // Keep flushing until there are no more.\n        try {\n          flushActQueue(queue); // The work we just performed may have schedule additional async\n          // tasks. Wait a macrotask and check again.\n\n          enqueueTask(function () {\n            return recursivelyFlushAsyncActWork(returnValue, resolve, reject);\n          });\n        } catch (error) {\n          // Leave remaining tasks on the queue if something throws.\n          reject(error);\n        }\n      } else {\n        // The queue is empty. We can finish.\n        ReactCurrentActQueue.current = null;\n        resolve(returnValue);\n      }\n    } else {\n      resolve(returnValue);\n    }\n  }\n}\n\nvar isFlushing = false;\n\nfunction flushActQueue(queue) {\n  {\n    if (!isFlushing) {\n      // Prevent re-entrance.\n      isFlushing = true;\n      var i = 0;\n\n      try {\n        for (; i < queue.length; i++) {\n          var callback = queue[i];\n\n          do {\n            ReactCurrentActQueue.didUsePromise = false;\n            var continuation = callback(false);\n\n            if (continuation !== null) {\n              if (ReactCurrentActQueue.didUsePromise) {\n                // The component just suspended. Yield to the main thread in\n                // case the promise is already resolved. If so, it will ping in\n                // a microtask and we can resume without unwinding the stack.\n                queue[i] = callback;\n                queue.splice(0, i);\n                return;\n              }\n\n              callback = continuation;\n            } else {\n              break;\n            }\n          } while (true);\n        } // We flushed the entire queue.\n\n\n        queue.length = 0;\n      } catch (error) {\n        // If something throws, leave the remaining callbacks on the queue.\n        queue.splice(0, i + 1);\n        throw error;\n      } finally {\n        isFlushing = false;\n      }\n    }\n  }\n} // Some of our warnings attempt to detect if the `act` call is awaited by\n// checking in an asynchronous task. Wait a few microtasks before checking. The\n// only reason one isn't sufficient is we want to accommodate the case where an\n// `act` call is returned from an async function without first being awaited,\n// since that's a somewhat common pattern. If you do this too many times in a\n// nested sequence, you might get a warning, but you can always fix by awaiting\n// the call.\n//\n// A macrotask would also work (and is the fallback) but depending on the test\n// environment it may cause the warning to fire too late.\n\n\nvar queueSeveralMicrotasks = typeof queueMicrotask === 'function' ? function (callback) {\n  queueMicrotask(function () {\n    return queueMicrotask(callback);\n  });\n} : enqueueTask;\n\nvar Children = {\n  map: mapChildren,\n  forEach: forEachChildren,\n  count: countChildren,\n  toArray: toArray,\n  only: onlyChild\n};\n\nexports.Children = Children;\nexports.Component = Component;\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.Profiler = REACT_PROFILER_TYPE;\nexports.PureComponent = PureComponent;\nexports.StrictMode = REACT_STRICT_MODE_TYPE;\nexports.Suspense = REACT_SUSPENSE_TYPE;\nexports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = ReactSharedInternals;\nexports.act = act;\nexports.cache = cache;\nexports.cloneElement = cloneElement;\nexports.createContext = createContext;\nexports.createElement = createElement;\nexports.createFactory = createFactory;\nexports.createRef = createRef;\nexports.forwardRef = forwardRef;\nexports.isValidElement = isValidElement;\nexports.lazy = lazy;\nexports.memo = memo;\nexports.startTransition = startTransition;\nexports.unstable_useCacheRefresh = useCacheRefresh;\nexports.use = use;\nexports.useCallback = useCallback;\nexports.useContext = useContext;\nexports.useDebugValue = useDebugValue;\nexports.useDeferredValue = useDeferredValue;\nexports.useEffect = useEffect;\nexports.useId = useId;\nexports.useImperativeHandle = useImperativeHandle;\nexports.useInsertionEffect = useInsertionEffect;\nexports.useLayoutEffect = useLayoutEffect;\nexports.useMemo = useMemo;\nexports.useOptimistic = useOptimistic;\nexports.useReducer = useReducer;\nexports.useRef = useRef;\nexports.useState = useState;\nexports.useSyncExternalStore = useSyncExternalStore;\nexports.useTransition = useTransition;\nexports.version = ReactVersion;\n          /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\nif (\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop ===\n    'function'\n) {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());\n}\n        \n  })();\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}